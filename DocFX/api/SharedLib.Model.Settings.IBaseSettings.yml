### YamlMime:ManagedReference
items:
- uid: SharedLib.Model.Settings.IBaseSettings
  commentId: T:SharedLib.Model.Settings.IBaseSettings
  id: IBaseSettings
  parent: SharedLib.Model.Settings
  children:
  - SharedLib.Model.Settings.IBaseSettings.Get(System.String,System.String)
  - SharedLib.Model.Settings.IBaseSettings.GetFunc
  - SharedLib.Model.Settings.IBaseSettings.Set(System.String,System.String)
  - SharedLib.Model.Settings.IBaseSettings.SetFunc
  langs:
  - csharp
  - vb
  name: IBaseSettings
  nameWithType: IBaseSettings
  fullName: SharedLib.Model.Settings.IBaseSettings
  type: Interface
  source:
    remote:
      path: SharedLib/Model/Settings/IBaseSettings.cs
      branch: master
      repo: https://github.com/aaaa777/rudeus-client.git
    id: IBaseSettings
    path: ../SharedLib/Model/Settings/IBaseSettings.cs
    startLine: 8
  assemblies:
  - SharedLib
  namespace: SharedLib.Model.Settings
  syntax:
    content: public interface IBaseSettings
    content.vb: Public Interface IBaseSettings
  extensionMethods:
  - SharedLib.Model.Settings.IBaseSettings.Xunit.AssertEx.AsDynamic``1
  - SharedLib.Model.Settings.IBaseSettings.Xunit.AssertEx.IsNotNull``1
  - SharedLib.Model.Settings.IBaseSettings.Xunit.AssertEx.IsNotSameReferenceAs``1(SharedLib.Model.Settings.IBaseSettings)
  - SharedLib.Model.Settings.IBaseSettings.Xunit.AssertEx.IsNot``1(SharedLib.Model.Settings.IBaseSettings)
  - SharedLib.Model.Settings.IBaseSettings.Xunit.AssertEx.IsNot``1(SharedLib.Model.Settings.IBaseSettings,System.Collections.Generic.IEqualityComparer{SharedLib.Model.Settings.IBaseSettings})
  - SharedLib.Model.Settings.IBaseSettings.Xunit.AssertEx.IsNull``1
  - SharedLib.Model.Settings.IBaseSettings.Xunit.AssertEx.IsSameReferenceAs``1(SharedLib.Model.Settings.IBaseSettings)
  - SharedLib.Model.Settings.IBaseSettings.Xunit.AssertEx.Is``1(SharedLib.Model.Settings.IBaseSettings)
  - SharedLib.Model.Settings.IBaseSettings.Xunit.AssertEx.Is``1(SharedLib.Model.Settings.IBaseSettings,System.Collections.Generic.IEqualityComparer{SharedLib.Model.Settings.IBaseSettings})
  - SharedLib.Model.Settings.IBaseSettings.Xunit.AssertEx.Is``1(System.Linq.Expressions.Expression{System.Func{SharedLib.Model.Settings.IBaseSettings,System.Boolean}},System.String)
  - System.Object.Xunit.AssertEx.IsInstanceOf``1
  - System.Object.Xunit.AssertEx.IsNotInstanceOf``1
  - System.Object.Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.String)
  - System.Object.Xunit.AssertEx.IsStructuralEqual(System.Object,System.String)
- uid: SharedLib.Model.Settings.IBaseSettings.Get(System.String,System.String)
  commentId: M:SharedLib.Model.Settings.IBaseSettings.Get(System.String,System.String)
  id: Get(System.String,System.String)
  parent: SharedLib.Model.Settings.IBaseSettings
  langs:
  - csharp
  - vb
  name: Get(string, string)
  nameWithType: IBaseSettings.Get(string, string)
  fullName: SharedLib.Model.Settings.IBaseSettings.Get(string, string)
  type: Method
  source:
    remote:
      path: SharedLib/Model/Settings/IBaseSettings.cs
      branch: master
      repo: https://github.com/aaaa777/rudeus-client.git
    id: Get
    path: ../SharedLib/Model/Settings/IBaseSettings.cs
    startLine: 10
  assemblies:
  - SharedLib
  namespace: SharedLib.Model.Settings
  syntax:
    content: string Get(string key, string defaultString)
    parameters:
    - id: key
      type: System.String
    - id: defaultString
      type: System.String
    return:
      type: System.String
    content.vb: Function [Get](key As String, defaultString As String) As String
  overload: SharedLib.Model.Settings.IBaseSettings.Get*
  nameWithType.vb: IBaseSettings.Get(String, String)
  fullName.vb: SharedLib.Model.Settings.IBaseSettings.Get(String, String)
  name.vb: Get(String, String)
- uid: SharedLib.Model.Settings.IBaseSettings.Set(System.String,System.String)
  commentId: M:SharedLib.Model.Settings.IBaseSettings.Set(System.String,System.String)
  id: Set(System.String,System.String)
  parent: SharedLib.Model.Settings.IBaseSettings
  langs:
  - csharp
  - vb
  name: Set(string, string)
  nameWithType: IBaseSettings.Set(string, string)
  fullName: SharedLib.Model.Settings.IBaseSettings.Set(string, string)
  type: Method
  source:
    remote:
      path: SharedLib/Model/Settings/IBaseSettings.cs
      branch: master
      repo: https://github.com/aaaa777/rudeus-client.git
    id: Set
    path: ../SharedLib/Model/Settings/IBaseSettings.cs
    startLine: 11
  assemblies:
  - SharedLib
  namespace: SharedLib.Model.Settings
  syntax:
    content: bool Set(string key, string value)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function [Set](key As String, value As String) As Boolean
  overload: SharedLib.Model.Settings.IBaseSettings.Set*
  nameWithType.vb: IBaseSettings.Set(String, String)
  fullName.vb: SharedLib.Model.Settings.IBaseSettings.Set(String, String)
  name.vb: Set(String, String)
- uid: SharedLib.Model.Settings.IBaseSettings.GetFunc
  commentId: P:SharedLib.Model.Settings.IBaseSettings.GetFunc
  id: GetFunc
  parent: SharedLib.Model.Settings.IBaseSettings
  langs:
  - csharp
  - vb
  name: GetFunc
  nameWithType: IBaseSettings.GetFunc
  fullName: SharedLib.Model.Settings.IBaseSettings.GetFunc
  type: Property
  source:
    remote:
      path: SharedLib/Model/Settings/IBaseSettings.cs
      branch: master
      repo: https://github.com/aaaa777/rudeus-client.git
    id: GetFunc
    path: ../SharedLib/Model/Settings/IBaseSettings.cs
    startLine: 14
  assemblies:
  - SharedLib
  namespace: SharedLib.Model.Settings
  syntax:
    content: Func<string, string, string> GetFunc { get; set; }
    parameters: []
    return:
      type: System.Func{System.String,System.String,System.String}
    content.vb: Property GetFunc As Func(Of String, String, String)
  overload: SharedLib.Model.Settings.IBaseSettings.GetFunc*
- uid: SharedLib.Model.Settings.IBaseSettings.SetFunc
  commentId: P:SharedLib.Model.Settings.IBaseSettings.SetFunc
  id: SetFunc
  parent: SharedLib.Model.Settings.IBaseSettings
  langs:
  - csharp
  - vb
  name: SetFunc
  nameWithType: IBaseSettings.SetFunc
  fullName: SharedLib.Model.Settings.IBaseSettings.SetFunc
  type: Property
  source:
    remote:
      path: SharedLib/Model/Settings/IBaseSettings.cs
      branch: master
      repo: https://github.com/aaaa777/rudeus-client.git
    id: SetFunc
    path: ../SharedLib/Model/Settings/IBaseSettings.cs
    startLine: 15
  assemblies:
  - SharedLib
  namespace: SharedLib.Model.Settings
  syntax:
    content: Func<string, string, bool> SetFunc { get; set; }
    parameters: []
    return:
      type: System.Func{System.String,System.String,System.Boolean}
    content.vb: Property SetFunc As Func(Of String, String, Boolean)
  overload: SharedLib.Model.Settings.IBaseSettings.SetFunc*
references:
- uid: SharedLib.Model.Settings
  commentId: N:SharedLib.Model.Settings
  href: SharedLib.html
  name: SharedLib.Model.Settings
  nameWithType: SharedLib.Model.Settings
  fullName: SharedLib.Model.Settings
  spec.csharp:
  - uid: SharedLib
    name: SharedLib
    href: SharedLib.html
  - name: .
  - uid: SharedLib.Model
    name: Model
    href: SharedLib.Model.html
  - name: .
  - uid: SharedLib.Model.Settings
    name: Settings
    href: SharedLib.Model.Settings.html
  spec.vb:
  - uid: SharedLib
    name: SharedLib
    href: SharedLib.html
  - name: .
  - uid: SharedLib.Model
    name: Model
    href: SharedLib.Model.html
  - name: .
  - uid: SharedLib.Model.Settings
    name: Settings
    href: SharedLib.Model.Settings.html
- uid: SharedLib.Model.Settings.IBaseSettings.Xunit.AssertEx.AsDynamic``1
  commentId: M:Xunit.AssertEx.AsDynamic``1(``0)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.AsDynamic``1(``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_AsDynamic__1___0_
  name: AsDynamic<IBaseSettings>(IBaseSettings)
  nameWithType: AssertEx.AsDynamic<IBaseSettings>(IBaseSettings)
  fullName: Xunit.AssertEx.AsDynamic<SharedLib.Model.Settings.IBaseSettings>(SharedLib.Model.Settings.IBaseSettings)
  nameWithType.vb: AssertEx.AsDynamic(Of IBaseSettings)(IBaseSettings)
  fullName.vb: Xunit.AssertEx.AsDynamic(Of SharedLib.Model.Settings.IBaseSettings)(SharedLib.Model.Settings.IBaseSettings)
  name.vb: AsDynamic(Of IBaseSettings)(IBaseSettings)
  spec.csharp:
  - uid: Xunit.AssertEx.AsDynamic``1(SharedLib.Model.Settings.IBaseSettings)
    name: AsDynamic
    href: Xunit.AssertEx.html#Xunit_AssertEx_AsDynamic__1___0_
  - name: <
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: '>'
  - name: (
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.AsDynamic``1(SharedLib.Model.Settings.IBaseSettings)
    name: AsDynamic
    href: Xunit.AssertEx.html#Xunit_AssertEx_AsDynamic__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: )
  - name: (
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: )
- uid: SharedLib.Model.Settings.IBaseSettings.Xunit.AssertEx.IsNotNull``1
  commentId: M:Xunit.AssertEx.IsNotNull``1(``0)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsNotNull``1(``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotNull__1___0_
  name: IsNotNull<IBaseSettings>(IBaseSettings)
  nameWithType: AssertEx.IsNotNull<IBaseSettings>(IBaseSettings)
  fullName: Xunit.AssertEx.IsNotNull<SharedLib.Model.Settings.IBaseSettings>(SharedLib.Model.Settings.IBaseSettings)
  nameWithType.vb: AssertEx.IsNotNull(Of IBaseSettings)(IBaseSettings)
  fullName.vb: Xunit.AssertEx.IsNotNull(Of SharedLib.Model.Settings.IBaseSettings)(SharedLib.Model.Settings.IBaseSettings)
  name.vb: IsNotNull(Of IBaseSettings)(IBaseSettings)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotNull``1(SharedLib.Model.Settings.IBaseSettings)
    name: IsNotNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotNull__1___0_
  - name: <
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: '>'
  - name: (
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotNull``1(SharedLib.Model.Settings.IBaseSettings)
    name: IsNotNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotNull__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: )
  - name: (
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: )
- uid: SharedLib.Model.Settings.IBaseSettings.Xunit.AssertEx.IsNotSameReferenceAs``1(SharedLib.Model.Settings.IBaseSettings)
  commentId: M:Xunit.AssertEx.IsNotSameReferenceAs``1(``0,``0)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsNotSameReferenceAs``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotSameReferenceAs__1___0___0_
  name: IsNotSameReferenceAs<IBaseSettings>(IBaseSettings, IBaseSettings)
  nameWithType: AssertEx.IsNotSameReferenceAs<IBaseSettings>(IBaseSettings, IBaseSettings)
  fullName: Xunit.AssertEx.IsNotSameReferenceAs<SharedLib.Model.Settings.IBaseSettings>(SharedLib.Model.Settings.IBaseSettings, SharedLib.Model.Settings.IBaseSettings)
  nameWithType.vb: AssertEx.IsNotSameReferenceAs(Of IBaseSettings)(IBaseSettings, IBaseSettings)
  fullName.vb: Xunit.AssertEx.IsNotSameReferenceAs(Of SharedLib.Model.Settings.IBaseSettings)(SharedLib.Model.Settings.IBaseSettings, SharedLib.Model.Settings.IBaseSettings)
  name.vb: IsNotSameReferenceAs(Of IBaseSettings)(IBaseSettings, IBaseSettings)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotSameReferenceAs``1(SharedLib.Model.Settings.IBaseSettings,SharedLib.Model.Settings.IBaseSettings)
    name: IsNotSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotSameReferenceAs__1___0___0_
  - name: <
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: '>'
  - name: (
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: ','
  - name: " "
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotSameReferenceAs``1(SharedLib.Model.Settings.IBaseSettings,SharedLib.Model.Settings.IBaseSettings)
    name: IsNotSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotSameReferenceAs__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: )
  - name: (
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: ','
  - name: " "
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: )
- uid: SharedLib.Model.Settings.IBaseSettings.Xunit.AssertEx.IsNot``1(SharedLib.Model.Settings.IBaseSettings)
  commentId: M:Xunit.AssertEx.IsNot``1(``0,``0)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsNot``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_
  name: IsNot<IBaseSettings>(IBaseSettings, IBaseSettings)
  nameWithType: AssertEx.IsNot<IBaseSettings>(IBaseSettings, IBaseSettings)
  fullName: Xunit.AssertEx.IsNot<SharedLib.Model.Settings.IBaseSettings>(SharedLib.Model.Settings.IBaseSettings, SharedLib.Model.Settings.IBaseSettings)
  nameWithType.vb: AssertEx.IsNot(Of IBaseSettings)(IBaseSettings, IBaseSettings)
  fullName.vb: Xunit.AssertEx.IsNot(Of SharedLib.Model.Settings.IBaseSettings)(SharedLib.Model.Settings.IBaseSettings, SharedLib.Model.Settings.IBaseSettings)
  name.vb: IsNot(Of IBaseSettings)(IBaseSettings, IBaseSettings)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNot``1(SharedLib.Model.Settings.IBaseSettings,SharedLib.Model.Settings.IBaseSettings)
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_
  - name: <
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: '>'
  - name: (
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: ','
  - name: " "
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNot``1(SharedLib.Model.Settings.IBaseSettings,SharedLib.Model.Settings.IBaseSettings)
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: )
  - name: (
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: ','
  - name: " "
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: )
- uid: SharedLib.Model.Settings.IBaseSettings.Xunit.AssertEx.IsNot``1(SharedLib.Model.Settings.IBaseSettings,System.Collections.Generic.IEqualityComparer{SharedLib.Model.Settings.IBaseSettings})
  commentId: M:Xunit.AssertEx.IsNot``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsNot``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  name: IsNot<IBaseSettings>(IBaseSettings, IBaseSettings, IEqualityComparer<IBaseSettings>)
  nameWithType: AssertEx.IsNot<IBaseSettings>(IBaseSettings, IBaseSettings, IEqualityComparer<IBaseSettings>)
  fullName: Xunit.AssertEx.IsNot<SharedLib.Model.Settings.IBaseSettings>(SharedLib.Model.Settings.IBaseSettings, SharedLib.Model.Settings.IBaseSettings, System.Collections.Generic.IEqualityComparer<SharedLib.Model.Settings.IBaseSettings>)
  nameWithType.vb: AssertEx.IsNot(Of IBaseSettings)(IBaseSettings, IBaseSettings, IEqualityComparer(Of IBaseSettings))
  fullName.vb: Xunit.AssertEx.IsNot(Of SharedLib.Model.Settings.IBaseSettings)(SharedLib.Model.Settings.IBaseSettings, SharedLib.Model.Settings.IBaseSettings, System.Collections.Generic.IEqualityComparer(Of SharedLib.Model.Settings.IBaseSettings))
  name.vb: IsNot(Of IBaseSettings)(IBaseSettings, IBaseSettings, IEqualityComparer(Of IBaseSettings))
  spec.csharp:
  - uid: Xunit.AssertEx.IsNot``1(SharedLib.Model.Settings.IBaseSettings,SharedLib.Model.Settings.IBaseSettings,System.Collections.Generic.IEqualityComparer{SharedLib.Model.Settings.IBaseSettings})
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: <
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: '>'
  - name: (
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: ','
  - name: " "
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNot``1(SharedLib.Model.Settings.IBaseSettings,SharedLib.Model.Settings.IBaseSettings,System.Collections.Generic.IEqualityComparer{SharedLib.Model.Settings.IBaseSettings})
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: (
  - name: Of
  - name: " "
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: )
  - name: (
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: ','
  - name: " "
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: )
  - name: )
- uid: SharedLib.Model.Settings.IBaseSettings.Xunit.AssertEx.IsNull``1
  commentId: M:Xunit.AssertEx.IsNull``1(``0)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsNull``1(``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNull__1___0_
  name: IsNull<IBaseSettings>(IBaseSettings)
  nameWithType: AssertEx.IsNull<IBaseSettings>(IBaseSettings)
  fullName: Xunit.AssertEx.IsNull<SharedLib.Model.Settings.IBaseSettings>(SharedLib.Model.Settings.IBaseSettings)
  nameWithType.vb: AssertEx.IsNull(Of IBaseSettings)(IBaseSettings)
  fullName.vb: Xunit.AssertEx.IsNull(Of SharedLib.Model.Settings.IBaseSettings)(SharedLib.Model.Settings.IBaseSettings)
  name.vb: IsNull(Of IBaseSettings)(IBaseSettings)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNull``1(SharedLib.Model.Settings.IBaseSettings)
    name: IsNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNull__1___0_
  - name: <
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: '>'
  - name: (
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNull``1(SharedLib.Model.Settings.IBaseSettings)
    name: IsNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNull__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: )
  - name: (
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: )
- uid: SharedLib.Model.Settings.IBaseSettings.Xunit.AssertEx.IsSameReferenceAs``1(SharedLib.Model.Settings.IBaseSettings)
  commentId: M:Xunit.AssertEx.IsSameReferenceAs``1(``0,``0)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsSameReferenceAs``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsSameReferenceAs__1___0___0_
  name: IsSameReferenceAs<IBaseSettings>(IBaseSettings, IBaseSettings)
  nameWithType: AssertEx.IsSameReferenceAs<IBaseSettings>(IBaseSettings, IBaseSettings)
  fullName: Xunit.AssertEx.IsSameReferenceAs<SharedLib.Model.Settings.IBaseSettings>(SharedLib.Model.Settings.IBaseSettings, SharedLib.Model.Settings.IBaseSettings)
  nameWithType.vb: AssertEx.IsSameReferenceAs(Of IBaseSettings)(IBaseSettings, IBaseSettings)
  fullName.vb: Xunit.AssertEx.IsSameReferenceAs(Of SharedLib.Model.Settings.IBaseSettings)(SharedLib.Model.Settings.IBaseSettings, SharedLib.Model.Settings.IBaseSettings)
  name.vb: IsSameReferenceAs(Of IBaseSettings)(IBaseSettings, IBaseSettings)
  spec.csharp:
  - uid: Xunit.AssertEx.IsSameReferenceAs``1(SharedLib.Model.Settings.IBaseSettings,SharedLib.Model.Settings.IBaseSettings)
    name: IsSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsSameReferenceAs__1___0___0_
  - name: <
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: '>'
  - name: (
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: ','
  - name: " "
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsSameReferenceAs``1(SharedLib.Model.Settings.IBaseSettings,SharedLib.Model.Settings.IBaseSettings)
    name: IsSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsSameReferenceAs__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: )
  - name: (
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: ','
  - name: " "
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: )
- uid: SharedLib.Model.Settings.IBaseSettings.Xunit.AssertEx.Is``1(SharedLib.Model.Settings.IBaseSettings)
  commentId: M:Xunit.AssertEx.Is``1(``0,``0)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.Is``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_
  name: Is<IBaseSettings>(IBaseSettings, IBaseSettings)
  nameWithType: AssertEx.Is<IBaseSettings>(IBaseSettings, IBaseSettings)
  fullName: Xunit.AssertEx.Is<SharedLib.Model.Settings.IBaseSettings>(SharedLib.Model.Settings.IBaseSettings, SharedLib.Model.Settings.IBaseSettings)
  nameWithType.vb: AssertEx.Is(Of IBaseSettings)(IBaseSettings, IBaseSettings)
  fullName.vb: Xunit.AssertEx.Is(Of SharedLib.Model.Settings.IBaseSettings)(SharedLib.Model.Settings.IBaseSettings, SharedLib.Model.Settings.IBaseSettings)
  name.vb: Is(Of IBaseSettings)(IBaseSettings, IBaseSettings)
  spec.csharp:
  - uid: Xunit.AssertEx.Is``1(SharedLib.Model.Settings.IBaseSettings,SharedLib.Model.Settings.IBaseSettings)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_
  - name: <
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: '>'
  - name: (
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: ','
  - name: " "
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.Is``1(SharedLib.Model.Settings.IBaseSettings,SharedLib.Model.Settings.IBaseSettings)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: )
  - name: (
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: ','
  - name: " "
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: )
- uid: SharedLib.Model.Settings.IBaseSettings.Xunit.AssertEx.Is``1(SharedLib.Model.Settings.IBaseSettings,System.Collections.Generic.IEqualityComparer{SharedLib.Model.Settings.IBaseSettings})
  commentId: M:Xunit.AssertEx.Is``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.Is``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  name: Is<IBaseSettings>(IBaseSettings, IBaseSettings, IEqualityComparer<IBaseSettings>)
  nameWithType: AssertEx.Is<IBaseSettings>(IBaseSettings, IBaseSettings, IEqualityComparer<IBaseSettings>)
  fullName: Xunit.AssertEx.Is<SharedLib.Model.Settings.IBaseSettings>(SharedLib.Model.Settings.IBaseSettings, SharedLib.Model.Settings.IBaseSettings, System.Collections.Generic.IEqualityComparer<SharedLib.Model.Settings.IBaseSettings>)
  nameWithType.vb: AssertEx.Is(Of IBaseSettings)(IBaseSettings, IBaseSettings, IEqualityComparer(Of IBaseSettings))
  fullName.vb: Xunit.AssertEx.Is(Of SharedLib.Model.Settings.IBaseSettings)(SharedLib.Model.Settings.IBaseSettings, SharedLib.Model.Settings.IBaseSettings, System.Collections.Generic.IEqualityComparer(Of SharedLib.Model.Settings.IBaseSettings))
  name.vb: Is(Of IBaseSettings)(IBaseSettings, IBaseSettings, IEqualityComparer(Of IBaseSettings))
  spec.csharp:
  - uid: Xunit.AssertEx.Is``1(SharedLib.Model.Settings.IBaseSettings,SharedLib.Model.Settings.IBaseSettings,System.Collections.Generic.IEqualityComparer{SharedLib.Model.Settings.IBaseSettings})
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: <
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: '>'
  - name: (
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: ','
  - name: " "
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.Is``1(SharedLib.Model.Settings.IBaseSettings,SharedLib.Model.Settings.IBaseSettings,System.Collections.Generic.IEqualityComparer{SharedLib.Model.Settings.IBaseSettings})
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: (
  - name: Of
  - name: " "
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: )
  - name: (
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: ','
  - name: " "
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: )
  - name: )
- uid: SharedLib.Model.Settings.IBaseSettings.Xunit.AssertEx.Is``1(System.Linq.Expressions.Expression{System.Func{SharedLib.Model.Settings.IBaseSettings,System.Boolean}},System.String)
  commentId: M:Xunit.AssertEx.Is``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.Is``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  name: Is<IBaseSettings>(IBaseSettings, Expression<Func<IBaseSettings, bool>>, string)
  nameWithType: AssertEx.Is<IBaseSettings>(IBaseSettings, Expression<Func<IBaseSettings, bool>>, string)
  fullName: Xunit.AssertEx.Is<SharedLib.Model.Settings.IBaseSettings>(SharedLib.Model.Settings.IBaseSettings, System.Linq.Expressions.Expression<System.Func<SharedLib.Model.Settings.IBaseSettings, bool>>, string)
  nameWithType.vb: AssertEx.Is(Of IBaseSettings)(IBaseSettings, Expression(Of Func(Of IBaseSettings, Boolean)), String)
  fullName.vb: Xunit.AssertEx.Is(Of SharedLib.Model.Settings.IBaseSettings)(SharedLib.Model.Settings.IBaseSettings, System.Linq.Expressions.Expression(Of System.Func(Of SharedLib.Model.Settings.IBaseSettings, Boolean)), String)
  name.vb: Is(Of IBaseSettings)(IBaseSettings, Expression(Of Func(Of IBaseSettings, Boolean)), String)
  spec.csharp:
  - uid: Xunit.AssertEx.Is``1(SharedLib.Model.Settings.IBaseSettings,System.Linq.Expressions.Expression{System.Func{SharedLib.Model.Settings.IBaseSettings,System.Boolean}},System.String)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: <
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: '>'
  - name: (
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.Is``1(SharedLib.Model.Settings.IBaseSettings,System.Linq.Expressions.Expression{System.Func{SharedLib.Model.Settings.IBaseSettings,System.Boolean}},System.String)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: )
  - name: (
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: SharedLib.Model.Settings.IBaseSettings
    name: IBaseSettings
    href: SharedLib.Model.Settings.IBaseSettings.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Object.Xunit.AssertEx.IsInstanceOf``1
  commentId: M:Xunit.AssertEx.IsInstanceOf``1(System.Object)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsInstanceOf``1(System.Object)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsInstanceOf__1_System_Object_
  name: IsInstanceOf<TExpected>(object)
  nameWithType: AssertEx.IsInstanceOf<TExpected>(object)
  fullName: Xunit.AssertEx.IsInstanceOf<TExpected>(object)
  nameWithType.vb: AssertEx.IsInstanceOf(Of TExpected)(Object)
  fullName.vb: Xunit.AssertEx.IsInstanceOf(Of TExpected)(Object)
  name.vb: IsInstanceOf(Of TExpected)(Object)
  spec.csharp:
  - uid: Xunit.AssertEx.IsInstanceOf``1(System.Object)
    name: IsInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsInstanceOf__1_System_Object_
  - name: <
  - name: TExpected
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsInstanceOf``1(System.Object)
    name: IsInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsInstanceOf__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: TExpected
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Xunit.AssertEx.IsNotInstanceOf``1
  commentId: M:Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotInstanceOf__1_System_Object_
  name: IsNotInstanceOf<TWrong>(object)
  nameWithType: AssertEx.IsNotInstanceOf<TWrong>(object)
  fullName: Xunit.AssertEx.IsNotInstanceOf<TWrong>(object)
  nameWithType.vb: AssertEx.IsNotInstanceOf(Of TWrong)(Object)
  fullName.vb: Xunit.AssertEx.IsNotInstanceOf(Of TWrong)(Object)
  name.vb: IsNotInstanceOf(Of TWrong)(Object)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
    name: IsNotInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotInstanceOf__1_System_Object_
  - name: <
  - name: TWrong
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
    name: IsNotInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotInstanceOf__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: TWrong
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.String)
  commentId: M:Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotStructuralEqual_System_Object_System_Object_System_String_
  name: IsNotStructuralEqual(object, object, string)
  nameWithType: AssertEx.IsNotStructuralEqual(object, object, string)
  fullName: Xunit.AssertEx.IsNotStructuralEqual(object, object, string)
  nameWithType.vb: AssertEx.IsNotStructuralEqual(Object, Object, String)
  fullName.vb: Xunit.AssertEx.IsNotStructuralEqual(Object, Object, String)
  name.vb: IsNotStructuralEqual(Object, Object, String)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
    name: IsNotStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
    name: IsNotStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Object.Xunit.AssertEx.IsStructuralEqual(System.Object,System.String)
  commentId: M:Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsStructuralEqual_System_Object_System_Object_System_String_
  name: IsStructuralEqual(object, object, string)
  nameWithType: AssertEx.IsStructuralEqual(object, object, string)
  fullName: Xunit.AssertEx.IsStructuralEqual(object, object, string)
  nameWithType.vb: AssertEx.IsStructuralEqual(Object, Object, String)
  fullName.vb: Xunit.AssertEx.IsStructuralEqual(Object, Object, String)
  name.vb: IsStructuralEqual(Object, Object, String)
  spec.csharp:
  - uid: Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
    name: IsStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
    name: IsStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Xunit.AssertEx.AsDynamic``1(``0)
  commentId: M:Xunit.AssertEx.AsDynamic``1(``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_AsDynamic__1___0_
  name: AsDynamic<T>(T)
  nameWithType: AssertEx.AsDynamic<T>(T)
  fullName: Xunit.AssertEx.AsDynamic<T>(T)
  nameWithType.vb: AssertEx.AsDynamic(Of T)(T)
  fullName.vb: Xunit.AssertEx.AsDynamic(Of T)(T)
  name.vb: AsDynamic(Of T)(T)
  spec.csharp:
  - uid: Xunit.AssertEx.AsDynamic``1(``0)
    name: AsDynamic
    href: Xunit.AssertEx.html#Xunit_AssertEx_AsDynamic__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.AsDynamic``1(``0)
    name: AsDynamic
    href: Xunit.AssertEx.html#Xunit_AssertEx_AsDynamic__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Xunit.AssertEx
  commentId: T:Xunit.AssertEx
  parent: Xunit
  href: Xunit.AssertEx.html
  name: AssertEx
  nameWithType: AssertEx
  fullName: Xunit.AssertEx
- uid: Xunit.AssertEx.IsNotNull``1(``0)
  commentId: M:Xunit.AssertEx.IsNotNull``1(``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotNull__1___0_
  name: IsNotNull<T>(T)
  nameWithType: AssertEx.IsNotNull<T>(T)
  fullName: Xunit.AssertEx.IsNotNull<T>(T)
  nameWithType.vb: AssertEx.IsNotNull(Of T)(T)
  fullName.vb: Xunit.AssertEx.IsNotNull(Of T)(T)
  name.vb: IsNotNull(Of T)(T)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotNull``1(``0)
    name: IsNotNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotNull__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotNull``1(``0)
    name: IsNotNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotNull__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Xunit.AssertEx.IsNotSameReferenceAs``1(``0,``0)
  commentId: M:Xunit.AssertEx.IsNotSameReferenceAs``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotSameReferenceAs__1___0___0_
  name: IsNotSameReferenceAs<T>(T, T)
  nameWithType: AssertEx.IsNotSameReferenceAs<T>(T, T)
  fullName: Xunit.AssertEx.IsNotSameReferenceAs<T>(T, T)
  nameWithType.vb: AssertEx.IsNotSameReferenceAs(Of T)(T, T)
  fullName.vb: Xunit.AssertEx.IsNotSameReferenceAs(Of T)(T, T)
  name.vb: IsNotSameReferenceAs(Of T)(T, T)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotSameReferenceAs``1(``0,``0)
    name: IsNotSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotSameReferenceAs__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotSameReferenceAs``1(``0,``0)
    name: IsNotSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotSameReferenceAs__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Xunit.AssertEx.IsNot``1(``0,``0)
  commentId: M:Xunit.AssertEx.IsNot``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_
  name: IsNot<T>(T, T)
  nameWithType: AssertEx.IsNot<T>(T, T)
  fullName: Xunit.AssertEx.IsNot<T>(T, T)
  nameWithType.vb: AssertEx.IsNot(Of T)(T, T)
  fullName.vb: Xunit.AssertEx.IsNot(Of T)(T, T)
  name.vb: IsNot(Of T)(T, T)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNot``1(``0,``0)
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNot``1(``0,``0)
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Xunit.AssertEx.IsNot``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:Xunit.AssertEx.IsNot``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  name: IsNot<T>(T, T, IEqualityComparer<T>)
  nameWithType: AssertEx.IsNot<T>(T, T, IEqualityComparer<T>)
  fullName: Xunit.AssertEx.IsNot<T>(T, T, System.Collections.Generic.IEqualityComparer<T>)
  nameWithType.vb: AssertEx.IsNot(Of T)(T, T, IEqualityComparer(Of T))
  fullName.vb: Xunit.AssertEx.IsNot(Of T)(T, T, System.Collections.Generic.IEqualityComparer(Of T))
  name.vb: IsNot(Of T)(T, T, IEqualityComparer(Of T))
  spec.csharp:
  - uid: Xunit.AssertEx.IsNot``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNot``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Xunit.AssertEx.IsNull``1(``0)
  commentId: M:Xunit.AssertEx.IsNull``1(``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNull__1___0_
  name: IsNull<T>(T)
  nameWithType: AssertEx.IsNull<T>(T)
  fullName: Xunit.AssertEx.IsNull<T>(T)
  nameWithType.vb: AssertEx.IsNull(Of T)(T)
  fullName.vb: Xunit.AssertEx.IsNull(Of T)(T)
  name.vb: IsNull(Of T)(T)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNull``1(``0)
    name: IsNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNull__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNull``1(``0)
    name: IsNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNull__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Xunit.AssertEx.IsSameReferenceAs``1(``0,``0)
  commentId: M:Xunit.AssertEx.IsSameReferenceAs``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsSameReferenceAs__1___0___0_
  name: IsSameReferenceAs<T>(T, T)
  nameWithType: AssertEx.IsSameReferenceAs<T>(T, T)
  fullName: Xunit.AssertEx.IsSameReferenceAs<T>(T, T)
  nameWithType.vb: AssertEx.IsSameReferenceAs(Of T)(T, T)
  fullName.vb: Xunit.AssertEx.IsSameReferenceAs(Of T)(T, T)
  name.vb: IsSameReferenceAs(Of T)(T, T)
  spec.csharp:
  - uid: Xunit.AssertEx.IsSameReferenceAs``1(``0,``0)
    name: IsSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsSameReferenceAs__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsSameReferenceAs``1(``0,``0)
    name: IsSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsSameReferenceAs__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Xunit.AssertEx.Is``1(``0,``0)
  commentId: M:Xunit.AssertEx.Is``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_
  name: Is<T>(T, T)
  nameWithType: AssertEx.Is<T>(T, T)
  fullName: Xunit.AssertEx.Is<T>(T, T)
  nameWithType.vb: AssertEx.Is(Of T)(T, T)
  fullName.vb: Xunit.AssertEx.Is(Of T)(T, T)
  name.vb: Is(Of T)(T, T)
  spec.csharp:
  - uid: Xunit.AssertEx.Is``1(``0,``0)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.Is``1(``0,``0)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Xunit.AssertEx.Is``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:Xunit.AssertEx.Is``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  name: Is<T>(T, T, IEqualityComparer<T>)
  nameWithType: AssertEx.Is<T>(T, T, IEqualityComparer<T>)
  fullName: Xunit.AssertEx.Is<T>(T, T, System.Collections.Generic.IEqualityComparer<T>)
  nameWithType.vb: AssertEx.Is(Of T)(T, T, IEqualityComparer(Of T))
  fullName.vb: Xunit.AssertEx.Is(Of T)(T, T, System.Collections.Generic.IEqualityComparer(Of T))
  name.vb: Is(Of T)(T, T, IEqualityComparer(Of T))
  spec.csharp:
  - uid: Xunit.AssertEx.Is``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.Is``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Xunit.AssertEx.Is``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  commentId: M:Xunit.AssertEx.Is``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  isExternal: true
  href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  name: Is<T>(T, Expression<Func<T, bool>>, string)
  nameWithType: AssertEx.Is<T>(T, Expression<Func<T, bool>>, string)
  fullName: Xunit.AssertEx.Is<T>(T, System.Linq.Expressions.Expression<System.Func<T, bool>>, string)
  nameWithType.vb: AssertEx.Is(Of T)(T, Expression(Of Func(Of T, Boolean)), String)
  fullName.vb: Xunit.AssertEx.Is(Of T)(T, System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), String)
  name.vb: Is(Of T)(T, Expression(Of Func(Of T, Boolean)), String)
  spec.csharp:
  - uid: Xunit.AssertEx.Is``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.Is``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Xunit.AssertEx.IsInstanceOf``1(System.Object)
  commentId: M:Xunit.AssertEx.IsInstanceOf``1(System.Object)
  isExternal: true
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsInstanceOf__1_System_Object_
  name: IsInstanceOf<TExpected>(object)
  nameWithType: AssertEx.IsInstanceOf<TExpected>(object)
  fullName: Xunit.AssertEx.IsInstanceOf<TExpected>(object)
  nameWithType.vb: AssertEx.IsInstanceOf(Of TExpected)(Object)
  fullName.vb: Xunit.AssertEx.IsInstanceOf(Of TExpected)(Object)
  name.vb: IsInstanceOf(Of TExpected)(Object)
  spec.csharp:
  - uid: Xunit.AssertEx.IsInstanceOf``1(System.Object)
    name: IsInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsInstanceOf__1_System_Object_
  - name: <
  - name: TExpected
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsInstanceOf``1(System.Object)
    name: IsInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsInstanceOf__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: TExpected
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
  commentId: M:Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
  isExternal: true
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotInstanceOf__1_System_Object_
  name: IsNotInstanceOf<TWrong>(object)
  nameWithType: AssertEx.IsNotInstanceOf<TWrong>(object)
  fullName: Xunit.AssertEx.IsNotInstanceOf<TWrong>(object)
  nameWithType.vb: AssertEx.IsNotInstanceOf(Of TWrong)(Object)
  fullName.vb: Xunit.AssertEx.IsNotInstanceOf(Of TWrong)(Object)
  name.vb: IsNotInstanceOf(Of TWrong)(Object)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
    name: IsNotInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotInstanceOf__1_System_Object_
  - name: <
  - name: TWrong
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
    name: IsNotInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotInstanceOf__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: TWrong
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
  commentId: M:Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
  isExternal: true
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotStructuralEqual_System_Object_System_Object_System_String_
  name: IsNotStructuralEqual(object, object, string)
  nameWithType: AssertEx.IsNotStructuralEqual(object, object, string)
  fullName: Xunit.AssertEx.IsNotStructuralEqual(object, object, string)
  nameWithType.vb: AssertEx.IsNotStructuralEqual(Object, Object, String)
  fullName.vb: Xunit.AssertEx.IsNotStructuralEqual(Object, Object, String)
  name.vb: IsNotStructuralEqual(Object, Object, String)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
    name: IsNotStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
    name: IsNotStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
  commentId: M:Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
  isExternal: true
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsStructuralEqual_System_Object_System_Object_System_String_
  name: IsStructuralEqual(object, object, string)
  nameWithType: AssertEx.IsStructuralEqual(object, object, string)
  fullName: Xunit.AssertEx.IsStructuralEqual(object, object, string)
  nameWithType.vb: AssertEx.IsStructuralEqual(Object, Object, String)
  fullName.vb: Xunit.AssertEx.IsStructuralEqual(Object, Object, String)
  name.vb: IsStructuralEqual(Object, Object, String)
  spec.csharp:
  - uid: Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
    name: IsStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
    name: IsStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Xunit
  commentId: N:Xunit
  href: Xunit.html
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: SharedLib.Model.Settings.IBaseSettings.Get*
  commentId: Overload:SharedLib.Model.Settings.IBaseSettings.Get
  href: SharedLib.Model.Settings.IBaseSettings.html#SharedLib_Model_Settings_IBaseSettings_Get_System_String_System_String_
  name: Get
  nameWithType: IBaseSettings.Get
  fullName: SharedLib.Model.Settings.IBaseSettings.Get
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SharedLib.Model.Settings.IBaseSettings.Set*
  commentId: Overload:SharedLib.Model.Settings.IBaseSettings.Set
  href: SharedLib.Model.Settings.IBaseSettings.html#SharedLib_Model_Settings_IBaseSettings_Set_System_String_System_String_
  name: Set
  nameWithType: IBaseSettings.Set
  fullName: SharedLib.Model.Settings.IBaseSettings.Set
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SharedLib.Model.Settings.IBaseSettings.GetFunc*
  commentId: Overload:SharedLib.Model.Settings.IBaseSettings.GetFunc
  href: SharedLib.Model.Settings.IBaseSettings.html#SharedLib_Model_Settings_IBaseSettings_GetFunc
  name: GetFunc
  nameWithType: IBaseSettings.GetFunc
  fullName: SharedLib.Model.Settings.IBaseSettings.GetFunc
- uid: System.Func{System.String,System.String,System.String}
  commentId: T:System.Func{System.String,System.String,System.String}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<string, string, string>
  nameWithType: Func<string, string, string>
  fullName: System.Func<string, string, string>
  nameWithType.vb: Func(Of String, String, String)
  fullName.vb: System.Func(Of String, String, String)
  name.vb: Func(Of String, String, String)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: SharedLib.Model.Settings.IBaseSettings.SetFunc*
  commentId: Overload:SharedLib.Model.Settings.IBaseSettings.SetFunc
  href: SharedLib.Model.Settings.IBaseSettings.html#SharedLib_Model_Settings_IBaseSettings_SetFunc
  name: SetFunc
  nameWithType: IBaseSettings.SetFunc
  fullName: SharedLib.Model.Settings.IBaseSettings.SetFunc
- uid: System.Func{System.String,System.String,System.Boolean}
  commentId: T:System.Func{System.String,System.String,System.Boolean}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<string, string, bool>
  nameWithType: Func<string, string, bool>
  fullName: System.Func<string, string, bool>
  nameWithType.vb: Func(Of String, String, Boolean)
  fullName.vb: System.Func(Of String, String, Boolean)
  name.vb: Func(Of String, String, Boolean)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
