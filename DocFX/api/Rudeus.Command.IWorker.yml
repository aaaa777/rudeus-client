### YamlMime:ManagedReference
items:
- uid: Rudeus.Command.IWorker
  commentId: T:Rudeus.Command.IWorker
  id: IWorker
  parent: Rudeus.Command
  children:
  - Rudeus.Command.IWorker.AccessTokenValidator
  - Rudeus.Command.IWorker.ScheduledRelularExecuter
  - Rudeus.Command.IWorker.UserLoginExecuter
  langs:
  - csharp
  - vb
  name: IWorker
  nameWithType: IWorker
  fullName: Rudeus.Command.IWorker
  type: Interface
  source:
    remote:
      path: Command/IWorker.cs
      branch: master
      repo: https://github.com/aaaa777/rudeus-client.git
    id: IWorker
    path: ../Command/IWorker.cs
    startLine: 9
  assemblies:
  - Command
  namespace: Rudeus.Command
  syntax:
    content: public interface IWorker
    content.vb: Public Interface IWorker
  extensionMethods:
  - Rudeus.Command.IWorker.Xunit.AssertEx.AsDynamic``1
  - Rudeus.Command.IWorker.Xunit.AssertEx.IsNotNull``1
  - Rudeus.Command.IWorker.Xunit.AssertEx.IsNotSameReferenceAs``1(Rudeus.Command.IWorker)
  - Rudeus.Command.IWorker.Xunit.AssertEx.IsNot``1(Rudeus.Command.IWorker)
  - Rudeus.Command.IWorker.Xunit.AssertEx.IsNot``1(Rudeus.Command.IWorker,System.Collections.Generic.IEqualityComparer{Rudeus.Command.IWorker})
  - Rudeus.Command.IWorker.Xunit.AssertEx.IsNull``1
  - Rudeus.Command.IWorker.Xunit.AssertEx.IsSameReferenceAs``1(Rudeus.Command.IWorker)
  - Rudeus.Command.IWorker.Xunit.AssertEx.Is``1(Rudeus.Command.IWorker)
  - Rudeus.Command.IWorker.Xunit.AssertEx.Is``1(Rudeus.Command.IWorker,System.Collections.Generic.IEqualityComparer{Rudeus.Command.IWorker})
  - Rudeus.Command.IWorker.Xunit.AssertEx.Is``1(System.Linq.Expressions.Expression{System.Func{Rudeus.Command.IWorker,System.Boolean}},System.String)
  - System.Object.Xunit.AssertEx.IsInstanceOf``1
  - System.Object.Xunit.AssertEx.IsNotInstanceOf``1
  - System.Object.Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.String)
  - System.Object.Xunit.AssertEx.IsStructuralEqual(System.Object,System.String)
- uid: Rudeus.Command.IWorker.AccessTokenValidator
  commentId: P:Rudeus.Command.IWorker.AccessTokenValidator
  id: AccessTokenValidator
  parent: Rudeus.Command.IWorker
  langs:
  - csharp
  - vb
  name: AccessTokenValidator
  nameWithType: IWorker.AccessTokenValidator
  fullName: Rudeus.Command.IWorker.AccessTokenValidator
  type: Property
  source:
    remote:
      path: Command/IWorker.cs
      branch: master
      repo: https://github.com/aaaa777/rudeus-client.git
    id: AccessTokenValidator
    path: ../Command/IWorker.cs
    startLine: 11
  assemblies:
  - Command
  namespace: Rudeus.Command
  syntax:
    content: IProcedure AccessTokenValidator { get; set; }
    parameters: []
    return:
      type: Rudeus.Procedure.IProcedure
    content.vb: Property AccessTokenValidator As IProcedure
  overload: Rudeus.Command.IWorker.AccessTokenValidator*
- uid: Rudeus.Command.IWorker.ScheduledRelularExecuter
  commentId: P:Rudeus.Command.IWorker.ScheduledRelularExecuter
  id: ScheduledRelularExecuter
  parent: Rudeus.Command.IWorker
  langs:
  - csharp
  - vb
  name: ScheduledRelularExecuter
  nameWithType: IWorker.ScheduledRelularExecuter
  fullName: Rudeus.Command.IWorker.ScheduledRelularExecuter
  type: Property
  source:
    remote:
      path: Command/IWorker.cs
      branch: master
      repo: https://github.com/aaaa777/rudeus-client.git
    id: ScheduledRelularExecuter
    path: ../Command/IWorker.cs
    startLine: 12
  assemblies:
  - Command
  namespace: Rudeus.Command
  syntax:
    content: IProcedure ScheduledRelularExecuter { get; set; }
    parameters: []
    return:
      type: Rudeus.Procedure.IProcedure
    content.vb: Property ScheduledRelularExecuter As IProcedure
  overload: Rudeus.Command.IWorker.ScheduledRelularExecuter*
- uid: Rudeus.Command.IWorker.UserLoginExecuter
  commentId: P:Rudeus.Command.IWorker.UserLoginExecuter
  id: UserLoginExecuter
  parent: Rudeus.Command.IWorker
  langs:
  - csharp
  - vb
  name: UserLoginExecuter
  nameWithType: IWorker.UserLoginExecuter
  fullName: Rudeus.Command.IWorker.UserLoginExecuter
  type: Property
  source:
    remote:
      path: Command/IWorker.cs
      branch: master
      repo: https://github.com/aaaa777/rudeus-client.git
    id: UserLoginExecuter
    path: ../Command/IWorker.cs
    startLine: 13
  assemblies:
  - Command
  namespace: Rudeus.Command
  syntax:
    content: IProcedure UserLoginExecuter { get; set; }
    parameters: []
    return:
      type: Rudeus.Procedure.IProcedure
    content.vb: Property UserLoginExecuter As IProcedure
  overload: Rudeus.Command.IWorker.UserLoginExecuter*
references:
- uid: Rudeus.Command
  commentId: N:Rudeus.Command
  href: Rudeus.html
  name: Rudeus.Command
  nameWithType: Rudeus.Command
  fullName: Rudeus.Command
  spec.csharp:
  - uid: Rudeus
    name: Rudeus
    href: Rudeus.html
  - name: .
  - uid: Rudeus.Command
    name: Command
    href: Rudeus.Command.html
  spec.vb:
  - uid: Rudeus
    name: Rudeus
    href: Rudeus.html
  - name: .
  - uid: Rudeus.Command
    name: Command
    href: Rudeus.Command.html
- uid: Rudeus.Command.IWorker.Xunit.AssertEx.AsDynamic``1
  commentId: M:Xunit.AssertEx.AsDynamic``1(``0)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.AsDynamic``1(``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_AsDynamic__1___0_
  name: AsDynamic<IWorker>(IWorker)
  nameWithType: AssertEx.AsDynamic<IWorker>(IWorker)
  fullName: Xunit.AssertEx.AsDynamic<Rudeus.Command.IWorker>(Rudeus.Command.IWorker)
  nameWithType.vb: AssertEx.AsDynamic(Of IWorker)(IWorker)
  fullName.vb: Xunit.AssertEx.AsDynamic(Of Rudeus.Command.IWorker)(Rudeus.Command.IWorker)
  name.vb: AsDynamic(Of IWorker)(IWorker)
  spec.csharp:
  - uid: Xunit.AssertEx.AsDynamic``1(Rudeus.Command.IWorker)
    name: AsDynamic
    href: Xunit.AssertEx.html#Xunit_AssertEx_AsDynamic__1___0_
  - name: <
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: '>'
  - name: (
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.AsDynamic``1(Rudeus.Command.IWorker)
    name: AsDynamic
    href: Xunit.AssertEx.html#Xunit_AssertEx_AsDynamic__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: )
  - name: (
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: )
- uid: Rudeus.Command.IWorker.Xunit.AssertEx.IsNotNull``1
  commentId: M:Xunit.AssertEx.IsNotNull``1(``0)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsNotNull``1(``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotNull__1___0_
  name: IsNotNull<IWorker>(IWorker)
  nameWithType: AssertEx.IsNotNull<IWorker>(IWorker)
  fullName: Xunit.AssertEx.IsNotNull<Rudeus.Command.IWorker>(Rudeus.Command.IWorker)
  nameWithType.vb: AssertEx.IsNotNull(Of IWorker)(IWorker)
  fullName.vb: Xunit.AssertEx.IsNotNull(Of Rudeus.Command.IWorker)(Rudeus.Command.IWorker)
  name.vb: IsNotNull(Of IWorker)(IWorker)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotNull``1(Rudeus.Command.IWorker)
    name: IsNotNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotNull__1___0_
  - name: <
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: '>'
  - name: (
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotNull``1(Rudeus.Command.IWorker)
    name: IsNotNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotNull__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: )
  - name: (
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: )
- uid: Rudeus.Command.IWorker.Xunit.AssertEx.IsNotSameReferenceAs``1(Rudeus.Command.IWorker)
  commentId: M:Xunit.AssertEx.IsNotSameReferenceAs``1(``0,``0)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsNotSameReferenceAs``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotSameReferenceAs__1___0___0_
  name: IsNotSameReferenceAs<IWorker>(IWorker, IWorker)
  nameWithType: AssertEx.IsNotSameReferenceAs<IWorker>(IWorker, IWorker)
  fullName: Xunit.AssertEx.IsNotSameReferenceAs<Rudeus.Command.IWorker>(Rudeus.Command.IWorker, Rudeus.Command.IWorker)
  nameWithType.vb: AssertEx.IsNotSameReferenceAs(Of IWorker)(IWorker, IWorker)
  fullName.vb: Xunit.AssertEx.IsNotSameReferenceAs(Of Rudeus.Command.IWorker)(Rudeus.Command.IWorker, Rudeus.Command.IWorker)
  name.vb: IsNotSameReferenceAs(Of IWorker)(IWorker, IWorker)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotSameReferenceAs``1(Rudeus.Command.IWorker,Rudeus.Command.IWorker)
    name: IsNotSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotSameReferenceAs__1___0___0_
  - name: <
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: '>'
  - name: (
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: ','
  - name: " "
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotSameReferenceAs``1(Rudeus.Command.IWorker,Rudeus.Command.IWorker)
    name: IsNotSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotSameReferenceAs__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: )
  - name: (
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: ','
  - name: " "
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: )
- uid: Rudeus.Command.IWorker.Xunit.AssertEx.IsNot``1(Rudeus.Command.IWorker)
  commentId: M:Xunit.AssertEx.IsNot``1(``0,``0)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsNot``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_
  name: IsNot<IWorker>(IWorker, IWorker)
  nameWithType: AssertEx.IsNot<IWorker>(IWorker, IWorker)
  fullName: Xunit.AssertEx.IsNot<Rudeus.Command.IWorker>(Rudeus.Command.IWorker, Rudeus.Command.IWorker)
  nameWithType.vb: AssertEx.IsNot(Of IWorker)(IWorker, IWorker)
  fullName.vb: Xunit.AssertEx.IsNot(Of Rudeus.Command.IWorker)(Rudeus.Command.IWorker, Rudeus.Command.IWorker)
  name.vb: IsNot(Of IWorker)(IWorker, IWorker)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNot``1(Rudeus.Command.IWorker,Rudeus.Command.IWorker)
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_
  - name: <
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: '>'
  - name: (
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: ','
  - name: " "
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNot``1(Rudeus.Command.IWorker,Rudeus.Command.IWorker)
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: )
  - name: (
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: ','
  - name: " "
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: )
- uid: Rudeus.Command.IWorker.Xunit.AssertEx.IsNot``1(Rudeus.Command.IWorker,System.Collections.Generic.IEqualityComparer{Rudeus.Command.IWorker})
  commentId: M:Xunit.AssertEx.IsNot``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsNot``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  name: IsNot<IWorker>(IWorker, IWorker, IEqualityComparer<IWorker>)
  nameWithType: AssertEx.IsNot<IWorker>(IWorker, IWorker, IEqualityComparer<IWorker>)
  fullName: Xunit.AssertEx.IsNot<Rudeus.Command.IWorker>(Rudeus.Command.IWorker, Rudeus.Command.IWorker, System.Collections.Generic.IEqualityComparer<Rudeus.Command.IWorker>)
  nameWithType.vb: AssertEx.IsNot(Of IWorker)(IWorker, IWorker, IEqualityComparer(Of IWorker))
  fullName.vb: Xunit.AssertEx.IsNot(Of Rudeus.Command.IWorker)(Rudeus.Command.IWorker, Rudeus.Command.IWorker, System.Collections.Generic.IEqualityComparer(Of Rudeus.Command.IWorker))
  name.vb: IsNot(Of IWorker)(IWorker, IWorker, IEqualityComparer(Of IWorker))
  spec.csharp:
  - uid: Xunit.AssertEx.IsNot``1(Rudeus.Command.IWorker,Rudeus.Command.IWorker,System.Collections.Generic.IEqualityComparer{Rudeus.Command.IWorker})
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: <
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: '>'
  - name: (
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: ','
  - name: " "
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNot``1(Rudeus.Command.IWorker,Rudeus.Command.IWorker,System.Collections.Generic.IEqualityComparer{Rudeus.Command.IWorker})
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: (
  - name: Of
  - name: " "
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: )
  - name: (
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: ','
  - name: " "
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: )
  - name: )
- uid: Rudeus.Command.IWorker.Xunit.AssertEx.IsNull``1
  commentId: M:Xunit.AssertEx.IsNull``1(``0)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsNull``1(``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNull__1___0_
  name: IsNull<IWorker>(IWorker)
  nameWithType: AssertEx.IsNull<IWorker>(IWorker)
  fullName: Xunit.AssertEx.IsNull<Rudeus.Command.IWorker>(Rudeus.Command.IWorker)
  nameWithType.vb: AssertEx.IsNull(Of IWorker)(IWorker)
  fullName.vb: Xunit.AssertEx.IsNull(Of Rudeus.Command.IWorker)(Rudeus.Command.IWorker)
  name.vb: IsNull(Of IWorker)(IWorker)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNull``1(Rudeus.Command.IWorker)
    name: IsNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNull__1___0_
  - name: <
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: '>'
  - name: (
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNull``1(Rudeus.Command.IWorker)
    name: IsNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNull__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: )
  - name: (
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: )
- uid: Rudeus.Command.IWorker.Xunit.AssertEx.IsSameReferenceAs``1(Rudeus.Command.IWorker)
  commentId: M:Xunit.AssertEx.IsSameReferenceAs``1(``0,``0)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsSameReferenceAs``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsSameReferenceAs__1___0___0_
  name: IsSameReferenceAs<IWorker>(IWorker, IWorker)
  nameWithType: AssertEx.IsSameReferenceAs<IWorker>(IWorker, IWorker)
  fullName: Xunit.AssertEx.IsSameReferenceAs<Rudeus.Command.IWorker>(Rudeus.Command.IWorker, Rudeus.Command.IWorker)
  nameWithType.vb: AssertEx.IsSameReferenceAs(Of IWorker)(IWorker, IWorker)
  fullName.vb: Xunit.AssertEx.IsSameReferenceAs(Of Rudeus.Command.IWorker)(Rudeus.Command.IWorker, Rudeus.Command.IWorker)
  name.vb: IsSameReferenceAs(Of IWorker)(IWorker, IWorker)
  spec.csharp:
  - uid: Xunit.AssertEx.IsSameReferenceAs``1(Rudeus.Command.IWorker,Rudeus.Command.IWorker)
    name: IsSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsSameReferenceAs__1___0___0_
  - name: <
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: '>'
  - name: (
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: ','
  - name: " "
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsSameReferenceAs``1(Rudeus.Command.IWorker,Rudeus.Command.IWorker)
    name: IsSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsSameReferenceAs__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: )
  - name: (
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: ','
  - name: " "
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: )
- uid: Rudeus.Command.IWorker.Xunit.AssertEx.Is``1(Rudeus.Command.IWorker)
  commentId: M:Xunit.AssertEx.Is``1(``0,``0)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.Is``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_
  name: Is<IWorker>(IWorker, IWorker)
  nameWithType: AssertEx.Is<IWorker>(IWorker, IWorker)
  fullName: Xunit.AssertEx.Is<Rudeus.Command.IWorker>(Rudeus.Command.IWorker, Rudeus.Command.IWorker)
  nameWithType.vb: AssertEx.Is(Of IWorker)(IWorker, IWorker)
  fullName.vb: Xunit.AssertEx.Is(Of Rudeus.Command.IWorker)(Rudeus.Command.IWorker, Rudeus.Command.IWorker)
  name.vb: Is(Of IWorker)(IWorker, IWorker)
  spec.csharp:
  - uid: Xunit.AssertEx.Is``1(Rudeus.Command.IWorker,Rudeus.Command.IWorker)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_
  - name: <
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: '>'
  - name: (
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: ','
  - name: " "
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.Is``1(Rudeus.Command.IWorker,Rudeus.Command.IWorker)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: )
  - name: (
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: ','
  - name: " "
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: )
- uid: Rudeus.Command.IWorker.Xunit.AssertEx.Is``1(Rudeus.Command.IWorker,System.Collections.Generic.IEqualityComparer{Rudeus.Command.IWorker})
  commentId: M:Xunit.AssertEx.Is``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.Is``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  name: Is<IWorker>(IWorker, IWorker, IEqualityComparer<IWorker>)
  nameWithType: AssertEx.Is<IWorker>(IWorker, IWorker, IEqualityComparer<IWorker>)
  fullName: Xunit.AssertEx.Is<Rudeus.Command.IWorker>(Rudeus.Command.IWorker, Rudeus.Command.IWorker, System.Collections.Generic.IEqualityComparer<Rudeus.Command.IWorker>)
  nameWithType.vb: AssertEx.Is(Of IWorker)(IWorker, IWorker, IEqualityComparer(Of IWorker))
  fullName.vb: Xunit.AssertEx.Is(Of Rudeus.Command.IWorker)(Rudeus.Command.IWorker, Rudeus.Command.IWorker, System.Collections.Generic.IEqualityComparer(Of Rudeus.Command.IWorker))
  name.vb: Is(Of IWorker)(IWorker, IWorker, IEqualityComparer(Of IWorker))
  spec.csharp:
  - uid: Xunit.AssertEx.Is``1(Rudeus.Command.IWorker,Rudeus.Command.IWorker,System.Collections.Generic.IEqualityComparer{Rudeus.Command.IWorker})
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: <
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: '>'
  - name: (
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: ','
  - name: " "
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.Is``1(Rudeus.Command.IWorker,Rudeus.Command.IWorker,System.Collections.Generic.IEqualityComparer{Rudeus.Command.IWorker})
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: (
  - name: Of
  - name: " "
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: )
  - name: (
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: ','
  - name: " "
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: )
  - name: )
- uid: Rudeus.Command.IWorker.Xunit.AssertEx.Is``1(System.Linq.Expressions.Expression{System.Func{Rudeus.Command.IWorker,System.Boolean}},System.String)
  commentId: M:Xunit.AssertEx.Is``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.Is``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  name: Is<IWorker>(IWorker, Expression<Func<IWorker, bool>>, string)
  nameWithType: AssertEx.Is<IWorker>(IWorker, Expression<Func<IWorker, bool>>, string)
  fullName: Xunit.AssertEx.Is<Rudeus.Command.IWorker>(Rudeus.Command.IWorker, System.Linq.Expressions.Expression<System.Func<Rudeus.Command.IWorker, bool>>, string)
  nameWithType.vb: AssertEx.Is(Of IWorker)(IWorker, Expression(Of Func(Of IWorker, Boolean)), String)
  fullName.vb: Xunit.AssertEx.Is(Of Rudeus.Command.IWorker)(Rudeus.Command.IWorker, System.Linq.Expressions.Expression(Of System.Func(Of Rudeus.Command.IWorker, Boolean)), String)
  name.vb: Is(Of IWorker)(IWorker, Expression(Of Func(Of IWorker, Boolean)), String)
  spec.csharp:
  - uid: Xunit.AssertEx.Is``1(Rudeus.Command.IWorker,System.Linq.Expressions.Expression{System.Func{Rudeus.Command.IWorker,System.Boolean}},System.String)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: <
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: '>'
  - name: (
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.Is``1(Rudeus.Command.IWorker,System.Linq.Expressions.Expression{System.Func{Rudeus.Command.IWorker,System.Boolean}},System.String)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: )
  - name: (
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Rudeus.Command.IWorker
    name: IWorker
    href: Rudeus.Command.IWorker.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Object.Xunit.AssertEx.IsInstanceOf``1
  commentId: M:Xunit.AssertEx.IsInstanceOf``1(System.Object)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsInstanceOf``1(System.Object)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsInstanceOf__1_System_Object_
  name: IsInstanceOf<TExpected>(object)
  nameWithType: AssertEx.IsInstanceOf<TExpected>(object)
  fullName: Xunit.AssertEx.IsInstanceOf<TExpected>(object)
  nameWithType.vb: AssertEx.IsInstanceOf(Of TExpected)(Object)
  fullName.vb: Xunit.AssertEx.IsInstanceOf(Of TExpected)(Object)
  name.vb: IsInstanceOf(Of TExpected)(Object)
  spec.csharp:
  - uid: Xunit.AssertEx.IsInstanceOf``1(System.Object)
    name: IsInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsInstanceOf__1_System_Object_
  - name: <
  - name: TExpected
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsInstanceOf``1(System.Object)
    name: IsInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsInstanceOf__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: TExpected
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Xunit.AssertEx.IsNotInstanceOf``1
  commentId: M:Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotInstanceOf__1_System_Object_
  name: IsNotInstanceOf<TWrong>(object)
  nameWithType: AssertEx.IsNotInstanceOf<TWrong>(object)
  fullName: Xunit.AssertEx.IsNotInstanceOf<TWrong>(object)
  nameWithType.vb: AssertEx.IsNotInstanceOf(Of TWrong)(Object)
  fullName.vb: Xunit.AssertEx.IsNotInstanceOf(Of TWrong)(Object)
  name.vb: IsNotInstanceOf(Of TWrong)(Object)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
    name: IsNotInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotInstanceOf__1_System_Object_
  - name: <
  - name: TWrong
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
    name: IsNotInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotInstanceOf__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: TWrong
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.String)
  commentId: M:Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotStructuralEqual_System_Object_System_Object_System_String_
  name: IsNotStructuralEqual(object, object, string)
  nameWithType: AssertEx.IsNotStructuralEqual(object, object, string)
  fullName: Xunit.AssertEx.IsNotStructuralEqual(object, object, string)
  nameWithType.vb: AssertEx.IsNotStructuralEqual(Object, Object, String)
  fullName.vb: Xunit.AssertEx.IsNotStructuralEqual(Object, Object, String)
  name.vb: IsNotStructuralEqual(Object, Object, String)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
    name: IsNotStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
    name: IsNotStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Object.Xunit.AssertEx.IsStructuralEqual(System.Object,System.String)
  commentId: M:Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsStructuralEqual_System_Object_System_Object_System_String_
  name: IsStructuralEqual(object, object, string)
  nameWithType: AssertEx.IsStructuralEqual(object, object, string)
  fullName: Xunit.AssertEx.IsStructuralEqual(object, object, string)
  nameWithType.vb: AssertEx.IsStructuralEqual(Object, Object, String)
  fullName.vb: Xunit.AssertEx.IsStructuralEqual(Object, Object, String)
  name.vb: IsStructuralEqual(Object, Object, String)
  spec.csharp:
  - uid: Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
    name: IsStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
    name: IsStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Xunit.AssertEx.AsDynamic``1(``0)
  commentId: M:Xunit.AssertEx.AsDynamic``1(``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_AsDynamic__1___0_
  name: AsDynamic<T>(T)
  nameWithType: AssertEx.AsDynamic<T>(T)
  fullName: Xunit.AssertEx.AsDynamic<T>(T)
  nameWithType.vb: AssertEx.AsDynamic(Of T)(T)
  fullName.vb: Xunit.AssertEx.AsDynamic(Of T)(T)
  name.vb: AsDynamic(Of T)(T)
  spec.csharp:
  - uid: Xunit.AssertEx.AsDynamic``1(``0)
    name: AsDynamic
    href: Xunit.AssertEx.html#Xunit_AssertEx_AsDynamic__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.AsDynamic``1(``0)
    name: AsDynamic
    href: Xunit.AssertEx.html#Xunit_AssertEx_AsDynamic__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Xunit.AssertEx
  commentId: T:Xunit.AssertEx
  parent: Xunit
  href: Xunit.AssertEx.html
  name: AssertEx
  nameWithType: AssertEx
  fullName: Xunit.AssertEx
- uid: Xunit.AssertEx.IsNotNull``1(``0)
  commentId: M:Xunit.AssertEx.IsNotNull``1(``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotNull__1___0_
  name: IsNotNull<T>(T)
  nameWithType: AssertEx.IsNotNull<T>(T)
  fullName: Xunit.AssertEx.IsNotNull<T>(T)
  nameWithType.vb: AssertEx.IsNotNull(Of T)(T)
  fullName.vb: Xunit.AssertEx.IsNotNull(Of T)(T)
  name.vb: IsNotNull(Of T)(T)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotNull``1(``0)
    name: IsNotNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotNull__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotNull``1(``0)
    name: IsNotNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotNull__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Xunit.AssertEx.IsNotSameReferenceAs``1(``0,``0)
  commentId: M:Xunit.AssertEx.IsNotSameReferenceAs``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotSameReferenceAs__1___0___0_
  name: IsNotSameReferenceAs<T>(T, T)
  nameWithType: AssertEx.IsNotSameReferenceAs<T>(T, T)
  fullName: Xunit.AssertEx.IsNotSameReferenceAs<T>(T, T)
  nameWithType.vb: AssertEx.IsNotSameReferenceAs(Of T)(T, T)
  fullName.vb: Xunit.AssertEx.IsNotSameReferenceAs(Of T)(T, T)
  name.vb: IsNotSameReferenceAs(Of T)(T, T)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotSameReferenceAs``1(``0,``0)
    name: IsNotSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotSameReferenceAs__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotSameReferenceAs``1(``0,``0)
    name: IsNotSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotSameReferenceAs__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Xunit.AssertEx.IsNot``1(``0,``0)
  commentId: M:Xunit.AssertEx.IsNot``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_
  name: IsNot<T>(T, T)
  nameWithType: AssertEx.IsNot<T>(T, T)
  fullName: Xunit.AssertEx.IsNot<T>(T, T)
  nameWithType.vb: AssertEx.IsNot(Of T)(T, T)
  fullName.vb: Xunit.AssertEx.IsNot(Of T)(T, T)
  name.vb: IsNot(Of T)(T, T)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNot``1(``0,``0)
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNot``1(``0,``0)
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Xunit.AssertEx.IsNot``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:Xunit.AssertEx.IsNot``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  name: IsNot<T>(T, T, IEqualityComparer<T>)
  nameWithType: AssertEx.IsNot<T>(T, T, IEqualityComparer<T>)
  fullName: Xunit.AssertEx.IsNot<T>(T, T, System.Collections.Generic.IEqualityComparer<T>)
  nameWithType.vb: AssertEx.IsNot(Of T)(T, T, IEqualityComparer(Of T))
  fullName.vb: Xunit.AssertEx.IsNot(Of T)(T, T, System.Collections.Generic.IEqualityComparer(Of T))
  name.vb: IsNot(Of T)(T, T, IEqualityComparer(Of T))
  spec.csharp:
  - uid: Xunit.AssertEx.IsNot``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNot``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Xunit.AssertEx.IsNull``1(``0)
  commentId: M:Xunit.AssertEx.IsNull``1(``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNull__1___0_
  name: IsNull<T>(T)
  nameWithType: AssertEx.IsNull<T>(T)
  fullName: Xunit.AssertEx.IsNull<T>(T)
  nameWithType.vb: AssertEx.IsNull(Of T)(T)
  fullName.vb: Xunit.AssertEx.IsNull(Of T)(T)
  name.vb: IsNull(Of T)(T)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNull``1(``0)
    name: IsNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNull__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNull``1(``0)
    name: IsNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNull__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Xunit.AssertEx.IsSameReferenceAs``1(``0,``0)
  commentId: M:Xunit.AssertEx.IsSameReferenceAs``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsSameReferenceAs__1___0___0_
  name: IsSameReferenceAs<T>(T, T)
  nameWithType: AssertEx.IsSameReferenceAs<T>(T, T)
  fullName: Xunit.AssertEx.IsSameReferenceAs<T>(T, T)
  nameWithType.vb: AssertEx.IsSameReferenceAs(Of T)(T, T)
  fullName.vb: Xunit.AssertEx.IsSameReferenceAs(Of T)(T, T)
  name.vb: IsSameReferenceAs(Of T)(T, T)
  spec.csharp:
  - uid: Xunit.AssertEx.IsSameReferenceAs``1(``0,``0)
    name: IsSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsSameReferenceAs__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsSameReferenceAs``1(``0,``0)
    name: IsSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsSameReferenceAs__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Xunit.AssertEx.Is``1(``0,``0)
  commentId: M:Xunit.AssertEx.Is``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_
  name: Is<T>(T, T)
  nameWithType: AssertEx.Is<T>(T, T)
  fullName: Xunit.AssertEx.Is<T>(T, T)
  nameWithType.vb: AssertEx.Is(Of T)(T, T)
  fullName.vb: Xunit.AssertEx.Is(Of T)(T, T)
  name.vb: Is(Of T)(T, T)
  spec.csharp:
  - uid: Xunit.AssertEx.Is``1(``0,``0)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.Is``1(``0,``0)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Xunit.AssertEx.Is``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:Xunit.AssertEx.Is``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  name: Is<T>(T, T, IEqualityComparer<T>)
  nameWithType: AssertEx.Is<T>(T, T, IEqualityComparer<T>)
  fullName: Xunit.AssertEx.Is<T>(T, T, System.Collections.Generic.IEqualityComparer<T>)
  nameWithType.vb: AssertEx.Is(Of T)(T, T, IEqualityComparer(Of T))
  fullName.vb: Xunit.AssertEx.Is(Of T)(T, T, System.Collections.Generic.IEqualityComparer(Of T))
  name.vb: Is(Of T)(T, T, IEqualityComparer(Of T))
  spec.csharp:
  - uid: Xunit.AssertEx.Is``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.Is``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Xunit.AssertEx.Is``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  commentId: M:Xunit.AssertEx.Is``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  isExternal: true
  href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  name: Is<T>(T, Expression<Func<T, bool>>, string)
  nameWithType: AssertEx.Is<T>(T, Expression<Func<T, bool>>, string)
  fullName: Xunit.AssertEx.Is<T>(T, System.Linq.Expressions.Expression<System.Func<T, bool>>, string)
  nameWithType.vb: AssertEx.Is(Of T)(T, Expression(Of Func(Of T, Boolean)), String)
  fullName.vb: Xunit.AssertEx.Is(Of T)(T, System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), String)
  name.vb: Is(Of T)(T, Expression(Of Func(Of T, Boolean)), String)
  spec.csharp:
  - uid: Xunit.AssertEx.Is``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.Is``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Xunit.AssertEx.IsInstanceOf``1(System.Object)
  commentId: M:Xunit.AssertEx.IsInstanceOf``1(System.Object)
  isExternal: true
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsInstanceOf__1_System_Object_
  name: IsInstanceOf<TExpected>(object)
  nameWithType: AssertEx.IsInstanceOf<TExpected>(object)
  fullName: Xunit.AssertEx.IsInstanceOf<TExpected>(object)
  nameWithType.vb: AssertEx.IsInstanceOf(Of TExpected)(Object)
  fullName.vb: Xunit.AssertEx.IsInstanceOf(Of TExpected)(Object)
  name.vb: IsInstanceOf(Of TExpected)(Object)
  spec.csharp:
  - uid: Xunit.AssertEx.IsInstanceOf``1(System.Object)
    name: IsInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsInstanceOf__1_System_Object_
  - name: <
  - name: TExpected
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsInstanceOf``1(System.Object)
    name: IsInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsInstanceOf__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: TExpected
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
  commentId: M:Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
  isExternal: true
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotInstanceOf__1_System_Object_
  name: IsNotInstanceOf<TWrong>(object)
  nameWithType: AssertEx.IsNotInstanceOf<TWrong>(object)
  fullName: Xunit.AssertEx.IsNotInstanceOf<TWrong>(object)
  nameWithType.vb: AssertEx.IsNotInstanceOf(Of TWrong)(Object)
  fullName.vb: Xunit.AssertEx.IsNotInstanceOf(Of TWrong)(Object)
  name.vb: IsNotInstanceOf(Of TWrong)(Object)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
    name: IsNotInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotInstanceOf__1_System_Object_
  - name: <
  - name: TWrong
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
    name: IsNotInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotInstanceOf__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: TWrong
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
  commentId: M:Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
  isExternal: true
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotStructuralEqual_System_Object_System_Object_System_String_
  name: IsNotStructuralEqual(object, object, string)
  nameWithType: AssertEx.IsNotStructuralEqual(object, object, string)
  fullName: Xunit.AssertEx.IsNotStructuralEqual(object, object, string)
  nameWithType.vb: AssertEx.IsNotStructuralEqual(Object, Object, String)
  fullName.vb: Xunit.AssertEx.IsNotStructuralEqual(Object, Object, String)
  name.vb: IsNotStructuralEqual(Object, Object, String)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
    name: IsNotStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
    name: IsNotStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
  commentId: M:Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
  isExternal: true
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsStructuralEqual_System_Object_System_Object_System_String_
  name: IsStructuralEqual(object, object, string)
  nameWithType: AssertEx.IsStructuralEqual(object, object, string)
  fullName: Xunit.AssertEx.IsStructuralEqual(object, object, string)
  nameWithType.vb: AssertEx.IsStructuralEqual(Object, Object, String)
  fullName.vb: Xunit.AssertEx.IsStructuralEqual(Object, Object, String)
  name.vb: IsStructuralEqual(Object, Object, String)
  spec.csharp:
  - uid: Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
    name: IsStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
    name: IsStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Xunit
  commentId: N:Xunit
  href: Xunit.html
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: Rudeus.Command.IWorker.AccessTokenValidator*
  commentId: Overload:Rudeus.Command.IWorker.AccessTokenValidator
  href: Rudeus.Command.IWorker.html#Rudeus_Command_IWorker_AccessTokenValidator
  name: AccessTokenValidator
  nameWithType: IWorker.AccessTokenValidator
  fullName: Rudeus.Command.IWorker.AccessTokenValidator
- uid: Rudeus.Procedure.IProcedure
  commentId: T:Rudeus.Procedure.IProcedure
  parent: Rudeus.Procedure
  href: Rudeus.Procedure.IProcedure.html
  name: IProcedure
  nameWithType: IProcedure
  fullName: Rudeus.Procedure.IProcedure
- uid: Rudeus.Procedure
  commentId: N:Rudeus.Procedure
  href: Rudeus.html
  name: Rudeus.Procedure
  nameWithType: Rudeus.Procedure
  fullName: Rudeus.Procedure
  spec.csharp:
  - uid: Rudeus
    name: Rudeus
    href: Rudeus.html
  - name: .
  - uid: Rudeus.Procedure
    name: Procedure
    href: Rudeus.Procedure.html
  spec.vb:
  - uid: Rudeus
    name: Rudeus
    href: Rudeus.html
  - name: .
  - uid: Rudeus.Procedure
    name: Procedure
    href: Rudeus.Procedure.html
- uid: Rudeus.Command.IWorker.ScheduledRelularExecuter*
  commentId: Overload:Rudeus.Command.IWorker.ScheduledRelularExecuter
  href: Rudeus.Command.IWorker.html#Rudeus_Command_IWorker_ScheduledRelularExecuter
  name: ScheduledRelularExecuter
  nameWithType: IWorker.ScheduledRelularExecuter
  fullName: Rudeus.Command.IWorker.ScheduledRelularExecuter
- uid: Rudeus.Command.IWorker.UserLoginExecuter*
  commentId: Overload:Rudeus.Command.IWorker.UserLoginExecuter
  href: Rudeus.Command.IWorker.html#Rudeus_Command_IWorker_UserLoginExecuter
  name: UserLoginExecuter
  nameWithType: IWorker.UserLoginExecuter
  fullName: Rudeus.Command.IWorker.UserLoginExecuter
