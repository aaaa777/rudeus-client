### YamlMime:ManagedReference
items:
- uid: SharedLib.Exceptions.AccessTokenUnavailableException
  commentId: T:SharedLib.Exceptions.AccessTokenUnavailableException
  id: AccessTokenUnavailableException
  parent: SharedLib.Exceptions
  children:
  - SharedLib.Exceptions.AccessTokenUnavailableException.#ctor(System.String)
  langs:
  - csharp
  - vb
  name: AccessTokenUnavailableException
  nameWithType: AccessTokenUnavailableException
  fullName: SharedLib.Exceptions.AccessTokenUnavailableException
  type: Class
  source:
    remote:
      path: SharedLib/Exceptions/Exceptions.cs
      branch: master
      repo: https://github.com/aaaa777/rudeus-client.git
    id: AccessTokenUnavailableException
    path: ../SharedLib/Exceptions/Exceptions.cs
    startLine: 7
  assemblies:
  - SharedLib
  namespace: SharedLib.Exceptions
  syntax:
    content: 'public class AccessTokenUnavailableException : Exception, ISerializable'
    content.vb: Public Class AccessTokenUnavailableException Inherits Exception Implements ISerializable
  inheritance:
  - System.Object
  - System.Exception
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Exception.GetBaseException
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.ToString
  - System.Exception.Data
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - SharedLib.Exceptions.AccessTokenUnavailableException.Xunit.AssertEx.AsDynamic``1
  - SharedLib.Exceptions.AccessTokenUnavailableException.Xunit.AssertEx.IsNotNull``1
  - SharedLib.Exceptions.AccessTokenUnavailableException.Xunit.AssertEx.IsNotSameReferenceAs``1(SharedLib.Exceptions.AccessTokenUnavailableException)
  - SharedLib.Exceptions.AccessTokenUnavailableException.Xunit.AssertEx.IsNot``1(SharedLib.Exceptions.AccessTokenUnavailableException)
  - SharedLib.Exceptions.AccessTokenUnavailableException.Xunit.AssertEx.IsNot``1(SharedLib.Exceptions.AccessTokenUnavailableException,System.Collections.Generic.IEqualityComparer{SharedLib.Exceptions.AccessTokenUnavailableException})
  - SharedLib.Exceptions.AccessTokenUnavailableException.Xunit.AssertEx.IsNull``1
  - SharedLib.Exceptions.AccessTokenUnavailableException.Xunit.AssertEx.IsSameReferenceAs``1(SharedLib.Exceptions.AccessTokenUnavailableException)
  - SharedLib.Exceptions.AccessTokenUnavailableException.Xunit.AssertEx.Is``1(SharedLib.Exceptions.AccessTokenUnavailableException)
  - SharedLib.Exceptions.AccessTokenUnavailableException.Xunit.AssertEx.Is``1(SharedLib.Exceptions.AccessTokenUnavailableException,System.Collections.Generic.IEqualityComparer{SharedLib.Exceptions.AccessTokenUnavailableException})
  - SharedLib.Exceptions.AccessTokenUnavailableException.Xunit.AssertEx.Is``1(System.Linq.Expressions.Expression{System.Func{SharedLib.Exceptions.AccessTokenUnavailableException,System.Boolean}},System.String)
  - System.Object.Xunit.AssertEx.IsInstanceOf``1
  - System.Object.Xunit.AssertEx.IsNotInstanceOf``1
  - System.Object.Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.String)
  - System.Object.Xunit.AssertEx.IsStructuralEqual(System.Object,System.String)
- uid: SharedLib.Exceptions.AccessTokenUnavailableException.#ctor(System.String)
  commentId: M:SharedLib.Exceptions.AccessTokenUnavailableException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: SharedLib.Exceptions.AccessTokenUnavailableException
  langs:
  - csharp
  - vb
  name: AccessTokenUnavailableException(string)
  nameWithType: AccessTokenUnavailableException.AccessTokenUnavailableException(string)
  fullName: SharedLib.Exceptions.AccessTokenUnavailableException.AccessTokenUnavailableException(string)
  type: Constructor
  source:
    remote:
      path: SharedLib/Exceptions/Exceptions.cs
      branch: master
      repo: https://github.com/aaaa777/rudeus-client.git
    id: .ctor
    path: ../SharedLib/Exceptions/Exceptions.cs
    startLine: 9
  assemblies:
  - SharedLib
  namespace: SharedLib.Exceptions
  syntax:
    content: public AccessTokenUnavailableException(string message)
    parameters:
    - id: message
      type: System.String
    content.vb: Public Sub New(message As String)
  overload: SharedLib.Exceptions.AccessTokenUnavailableException.#ctor*
  nameWithType.vb: AccessTokenUnavailableException.New(String)
  fullName.vb: SharedLib.Exceptions.AccessTokenUnavailableException.New(String)
  name.vb: New(String)
references:
- uid: SharedLib.Exceptions
  commentId: N:SharedLib.Exceptions
  href: SharedLib.html
  name: SharedLib.Exceptions
  nameWithType: SharedLib.Exceptions
  fullName: SharedLib.Exceptions
  spec.csharp:
  - uid: SharedLib
    name: SharedLib
    href: SharedLib.html
  - name: .
  - uid: SharedLib.Exceptions
    name: Exceptions
    href: SharedLib.Exceptions.html
  spec.vb:
  - uid: SharedLib
    name: SharedLib
    href: SharedLib.html
  - name: .
  - uid: SharedLib.Exceptions
    name: Exceptions
    href: SharedLib.Exceptions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.iserializable
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Exception.GetBaseException
  commentId: M:System.Exception.GetBaseException
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.getbaseexception
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception.getbaseexception
  - name: (
  - name: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception.getbaseexception
  - name: (
  - name: )
- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.getobjectdata
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception.getobjectdata
  - name: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.serializationinfo
  - name: ','
  - name: " "
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.streamingcontext
  - name: )
  spec.vb:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception.getobjectdata
  - name: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.serializationinfo
  - name: ','
  - name: " "
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.streamingcontext
  - name: )
- uid: System.Exception.GetType
  commentId: M:System.Exception.GetType
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.gettype
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception.gettype
  - name: (
  - name: )
- uid: System.Exception.ToString
  commentId: M:System.Exception.ToString
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.tostring
  name: ToString()
  nameWithType: Exception.ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception.tostring
  - name: (
  - name: )
- uid: System.Exception.Data
  commentId: P:System.Exception.Data
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.data
  name: Data
  nameWithType: Exception.Data
  fullName: System.Exception.Data
- uid: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.helplink
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.HResult
  commentId: P:System.Exception.HResult
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.hresult
  name: HResult
  nameWithType: Exception.HResult
  fullName: System.Exception.HResult
- uid: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.innerexception
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.Message
  commentId: P:System.Exception.Message
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.message
  name: Message
  nameWithType: Exception.Message
  fullName: System.Exception.Message
- uid: System.Exception.Source
  commentId: P:System.Exception.Source
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.source
  name: Source
  nameWithType: Exception.Source
  fullName: System.Exception.Source
- uid: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.stacktrace
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.TargetSite
  commentId: P:System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.targetsite
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: System.Exception.TargetSite
- uid: System.Exception.SerializeObjectState
  commentId: E:System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.serializeobjectstate
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: System.Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: SharedLib.Exceptions.AccessTokenUnavailableException.Xunit.AssertEx.AsDynamic``1
  commentId: M:Xunit.AssertEx.AsDynamic``1(``0)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.AsDynamic``1(``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_AsDynamic__1___0_
  name: AsDynamic<AccessTokenUnavailableException>(AccessTokenUnavailableException)
  nameWithType: AssertEx.AsDynamic<AccessTokenUnavailableException>(AccessTokenUnavailableException)
  fullName: Xunit.AssertEx.AsDynamic<SharedLib.Exceptions.AccessTokenUnavailableException>(SharedLib.Exceptions.AccessTokenUnavailableException)
  nameWithType.vb: AssertEx.AsDynamic(Of AccessTokenUnavailableException)(AccessTokenUnavailableException)
  fullName.vb: Xunit.AssertEx.AsDynamic(Of SharedLib.Exceptions.AccessTokenUnavailableException)(SharedLib.Exceptions.AccessTokenUnavailableException)
  name.vb: AsDynamic(Of AccessTokenUnavailableException)(AccessTokenUnavailableException)
  spec.csharp:
  - uid: Xunit.AssertEx.AsDynamic``1(SharedLib.Exceptions.AccessTokenUnavailableException)
    name: AsDynamic
    href: Xunit.AssertEx.html#Xunit_AssertEx_AsDynamic__1___0_
  - name: <
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: '>'
  - name: (
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.AsDynamic``1(SharedLib.Exceptions.AccessTokenUnavailableException)
    name: AsDynamic
    href: Xunit.AssertEx.html#Xunit_AssertEx_AsDynamic__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: )
  - name: (
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: )
- uid: SharedLib.Exceptions.AccessTokenUnavailableException.Xunit.AssertEx.IsNotNull``1
  commentId: M:Xunit.AssertEx.IsNotNull``1(``0)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsNotNull``1(``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotNull__1___0_
  name: IsNotNull<AccessTokenUnavailableException>(AccessTokenUnavailableException)
  nameWithType: AssertEx.IsNotNull<AccessTokenUnavailableException>(AccessTokenUnavailableException)
  fullName: Xunit.AssertEx.IsNotNull<SharedLib.Exceptions.AccessTokenUnavailableException>(SharedLib.Exceptions.AccessTokenUnavailableException)
  nameWithType.vb: AssertEx.IsNotNull(Of AccessTokenUnavailableException)(AccessTokenUnavailableException)
  fullName.vb: Xunit.AssertEx.IsNotNull(Of SharedLib.Exceptions.AccessTokenUnavailableException)(SharedLib.Exceptions.AccessTokenUnavailableException)
  name.vb: IsNotNull(Of AccessTokenUnavailableException)(AccessTokenUnavailableException)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotNull``1(SharedLib.Exceptions.AccessTokenUnavailableException)
    name: IsNotNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotNull__1___0_
  - name: <
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: '>'
  - name: (
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotNull``1(SharedLib.Exceptions.AccessTokenUnavailableException)
    name: IsNotNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotNull__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: )
  - name: (
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: )
- uid: SharedLib.Exceptions.AccessTokenUnavailableException.Xunit.AssertEx.IsNotSameReferenceAs``1(SharedLib.Exceptions.AccessTokenUnavailableException)
  commentId: M:Xunit.AssertEx.IsNotSameReferenceAs``1(``0,``0)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsNotSameReferenceAs``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotSameReferenceAs__1___0___0_
  name: IsNotSameReferenceAs<AccessTokenUnavailableException>(AccessTokenUnavailableException, AccessTokenUnavailableException)
  nameWithType: AssertEx.IsNotSameReferenceAs<AccessTokenUnavailableException>(AccessTokenUnavailableException, AccessTokenUnavailableException)
  fullName: Xunit.AssertEx.IsNotSameReferenceAs<SharedLib.Exceptions.AccessTokenUnavailableException>(SharedLib.Exceptions.AccessTokenUnavailableException, SharedLib.Exceptions.AccessTokenUnavailableException)
  nameWithType.vb: AssertEx.IsNotSameReferenceAs(Of AccessTokenUnavailableException)(AccessTokenUnavailableException, AccessTokenUnavailableException)
  fullName.vb: Xunit.AssertEx.IsNotSameReferenceAs(Of SharedLib.Exceptions.AccessTokenUnavailableException)(SharedLib.Exceptions.AccessTokenUnavailableException, SharedLib.Exceptions.AccessTokenUnavailableException)
  name.vb: IsNotSameReferenceAs(Of AccessTokenUnavailableException)(AccessTokenUnavailableException, AccessTokenUnavailableException)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotSameReferenceAs``1(SharedLib.Exceptions.AccessTokenUnavailableException,SharedLib.Exceptions.AccessTokenUnavailableException)
    name: IsNotSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotSameReferenceAs__1___0___0_
  - name: <
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: '>'
  - name: (
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: ','
  - name: " "
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotSameReferenceAs``1(SharedLib.Exceptions.AccessTokenUnavailableException,SharedLib.Exceptions.AccessTokenUnavailableException)
    name: IsNotSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotSameReferenceAs__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: )
  - name: (
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: ','
  - name: " "
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: )
- uid: SharedLib.Exceptions.AccessTokenUnavailableException.Xunit.AssertEx.IsNot``1(SharedLib.Exceptions.AccessTokenUnavailableException)
  commentId: M:Xunit.AssertEx.IsNot``1(``0,``0)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsNot``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_
  name: IsNot<AccessTokenUnavailableException>(AccessTokenUnavailableException, AccessTokenUnavailableException)
  nameWithType: AssertEx.IsNot<AccessTokenUnavailableException>(AccessTokenUnavailableException, AccessTokenUnavailableException)
  fullName: Xunit.AssertEx.IsNot<SharedLib.Exceptions.AccessTokenUnavailableException>(SharedLib.Exceptions.AccessTokenUnavailableException, SharedLib.Exceptions.AccessTokenUnavailableException)
  nameWithType.vb: AssertEx.IsNot(Of AccessTokenUnavailableException)(AccessTokenUnavailableException, AccessTokenUnavailableException)
  fullName.vb: Xunit.AssertEx.IsNot(Of SharedLib.Exceptions.AccessTokenUnavailableException)(SharedLib.Exceptions.AccessTokenUnavailableException, SharedLib.Exceptions.AccessTokenUnavailableException)
  name.vb: IsNot(Of AccessTokenUnavailableException)(AccessTokenUnavailableException, AccessTokenUnavailableException)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNot``1(SharedLib.Exceptions.AccessTokenUnavailableException,SharedLib.Exceptions.AccessTokenUnavailableException)
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_
  - name: <
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: '>'
  - name: (
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: ','
  - name: " "
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNot``1(SharedLib.Exceptions.AccessTokenUnavailableException,SharedLib.Exceptions.AccessTokenUnavailableException)
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: )
  - name: (
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: ','
  - name: " "
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: )
- uid: SharedLib.Exceptions.AccessTokenUnavailableException.Xunit.AssertEx.IsNot``1(SharedLib.Exceptions.AccessTokenUnavailableException,System.Collections.Generic.IEqualityComparer{SharedLib.Exceptions.AccessTokenUnavailableException})
  commentId: M:Xunit.AssertEx.IsNot``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsNot``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  name: IsNot<AccessTokenUnavailableException>(AccessTokenUnavailableException, AccessTokenUnavailableException, IEqualityComparer<AccessTokenUnavailableException>)
  nameWithType: AssertEx.IsNot<AccessTokenUnavailableException>(AccessTokenUnavailableException, AccessTokenUnavailableException, IEqualityComparer<AccessTokenUnavailableException>)
  fullName: Xunit.AssertEx.IsNot<SharedLib.Exceptions.AccessTokenUnavailableException>(SharedLib.Exceptions.AccessTokenUnavailableException, SharedLib.Exceptions.AccessTokenUnavailableException, System.Collections.Generic.IEqualityComparer<SharedLib.Exceptions.AccessTokenUnavailableException>)
  nameWithType.vb: AssertEx.IsNot(Of AccessTokenUnavailableException)(AccessTokenUnavailableException, AccessTokenUnavailableException, IEqualityComparer(Of AccessTokenUnavailableException))
  fullName.vb: Xunit.AssertEx.IsNot(Of SharedLib.Exceptions.AccessTokenUnavailableException)(SharedLib.Exceptions.AccessTokenUnavailableException, SharedLib.Exceptions.AccessTokenUnavailableException, System.Collections.Generic.IEqualityComparer(Of SharedLib.Exceptions.AccessTokenUnavailableException))
  name.vb: IsNot(Of AccessTokenUnavailableException)(AccessTokenUnavailableException, AccessTokenUnavailableException, IEqualityComparer(Of AccessTokenUnavailableException))
  spec.csharp:
  - uid: Xunit.AssertEx.IsNot``1(SharedLib.Exceptions.AccessTokenUnavailableException,SharedLib.Exceptions.AccessTokenUnavailableException,System.Collections.Generic.IEqualityComparer{SharedLib.Exceptions.AccessTokenUnavailableException})
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: <
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: '>'
  - name: (
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: ','
  - name: " "
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNot``1(SharedLib.Exceptions.AccessTokenUnavailableException,SharedLib.Exceptions.AccessTokenUnavailableException,System.Collections.Generic.IEqualityComparer{SharedLib.Exceptions.AccessTokenUnavailableException})
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: (
  - name: Of
  - name: " "
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: )
  - name: (
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: ','
  - name: " "
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: )
  - name: )
- uid: SharedLib.Exceptions.AccessTokenUnavailableException.Xunit.AssertEx.IsNull``1
  commentId: M:Xunit.AssertEx.IsNull``1(``0)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsNull``1(``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNull__1___0_
  name: IsNull<AccessTokenUnavailableException>(AccessTokenUnavailableException)
  nameWithType: AssertEx.IsNull<AccessTokenUnavailableException>(AccessTokenUnavailableException)
  fullName: Xunit.AssertEx.IsNull<SharedLib.Exceptions.AccessTokenUnavailableException>(SharedLib.Exceptions.AccessTokenUnavailableException)
  nameWithType.vb: AssertEx.IsNull(Of AccessTokenUnavailableException)(AccessTokenUnavailableException)
  fullName.vb: Xunit.AssertEx.IsNull(Of SharedLib.Exceptions.AccessTokenUnavailableException)(SharedLib.Exceptions.AccessTokenUnavailableException)
  name.vb: IsNull(Of AccessTokenUnavailableException)(AccessTokenUnavailableException)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNull``1(SharedLib.Exceptions.AccessTokenUnavailableException)
    name: IsNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNull__1___0_
  - name: <
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: '>'
  - name: (
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNull``1(SharedLib.Exceptions.AccessTokenUnavailableException)
    name: IsNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNull__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: )
  - name: (
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: )
- uid: SharedLib.Exceptions.AccessTokenUnavailableException.Xunit.AssertEx.IsSameReferenceAs``1(SharedLib.Exceptions.AccessTokenUnavailableException)
  commentId: M:Xunit.AssertEx.IsSameReferenceAs``1(``0,``0)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsSameReferenceAs``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsSameReferenceAs__1___0___0_
  name: IsSameReferenceAs<AccessTokenUnavailableException>(AccessTokenUnavailableException, AccessTokenUnavailableException)
  nameWithType: AssertEx.IsSameReferenceAs<AccessTokenUnavailableException>(AccessTokenUnavailableException, AccessTokenUnavailableException)
  fullName: Xunit.AssertEx.IsSameReferenceAs<SharedLib.Exceptions.AccessTokenUnavailableException>(SharedLib.Exceptions.AccessTokenUnavailableException, SharedLib.Exceptions.AccessTokenUnavailableException)
  nameWithType.vb: AssertEx.IsSameReferenceAs(Of AccessTokenUnavailableException)(AccessTokenUnavailableException, AccessTokenUnavailableException)
  fullName.vb: Xunit.AssertEx.IsSameReferenceAs(Of SharedLib.Exceptions.AccessTokenUnavailableException)(SharedLib.Exceptions.AccessTokenUnavailableException, SharedLib.Exceptions.AccessTokenUnavailableException)
  name.vb: IsSameReferenceAs(Of AccessTokenUnavailableException)(AccessTokenUnavailableException, AccessTokenUnavailableException)
  spec.csharp:
  - uid: Xunit.AssertEx.IsSameReferenceAs``1(SharedLib.Exceptions.AccessTokenUnavailableException,SharedLib.Exceptions.AccessTokenUnavailableException)
    name: IsSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsSameReferenceAs__1___0___0_
  - name: <
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: '>'
  - name: (
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: ','
  - name: " "
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsSameReferenceAs``1(SharedLib.Exceptions.AccessTokenUnavailableException,SharedLib.Exceptions.AccessTokenUnavailableException)
    name: IsSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsSameReferenceAs__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: )
  - name: (
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: ','
  - name: " "
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: )
- uid: SharedLib.Exceptions.AccessTokenUnavailableException.Xunit.AssertEx.Is``1(SharedLib.Exceptions.AccessTokenUnavailableException)
  commentId: M:Xunit.AssertEx.Is``1(``0,``0)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.Is``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_
  name: Is<AccessTokenUnavailableException>(AccessTokenUnavailableException, AccessTokenUnavailableException)
  nameWithType: AssertEx.Is<AccessTokenUnavailableException>(AccessTokenUnavailableException, AccessTokenUnavailableException)
  fullName: Xunit.AssertEx.Is<SharedLib.Exceptions.AccessTokenUnavailableException>(SharedLib.Exceptions.AccessTokenUnavailableException, SharedLib.Exceptions.AccessTokenUnavailableException)
  nameWithType.vb: AssertEx.Is(Of AccessTokenUnavailableException)(AccessTokenUnavailableException, AccessTokenUnavailableException)
  fullName.vb: Xunit.AssertEx.Is(Of SharedLib.Exceptions.AccessTokenUnavailableException)(SharedLib.Exceptions.AccessTokenUnavailableException, SharedLib.Exceptions.AccessTokenUnavailableException)
  name.vb: Is(Of AccessTokenUnavailableException)(AccessTokenUnavailableException, AccessTokenUnavailableException)
  spec.csharp:
  - uid: Xunit.AssertEx.Is``1(SharedLib.Exceptions.AccessTokenUnavailableException,SharedLib.Exceptions.AccessTokenUnavailableException)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_
  - name: <
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: '>'
  - name: (
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: ','
  - name: " "
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.Is``1(SharedLib.Exceptions.AccessTokenUnavailableException,SharedLib.Exceptions.AccessTokenUnavailableException)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: )
  - name: (
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: ','
  - name: " "
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: )
- uid: SharedLib.Exceptions.AccessTokenUnavailableException.Xunit.AssertEx.Is``1(SharedLib.Exceptions.AccessTokenUnavailableException,System.Collections.Generic.IEqualityComparer{SharedLib.Exceptions.AccessTokenUnavailableException})
  commentId: M:Xunit.AssertEx.Is``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.Is``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  name: Is<AccessTokenUnavailableException>(AccessTokenUnavailableException, AccessTokenUnavailableException, IEqualityComparer<AccessTokenUnavailableException>)
  nameWithType: AssertEx.Is<AccessTokenUnavailableException>(AccessTokenUnavailableException, AccessTokenUnavailableException, IEqualityComparer<AccessTokenUnavailableException>)
  fullName: Xunit.AssertEx.Is<SharedLib.Exceptions.AccessTokenUnavailableException>(SharedLib.Exceptions.AccessTokenUnavailableException, SharedLib.Exceptions.AccessTokenUnavailableException, System.Collections.Generic.IEqualityComparer<SharedLib.Exceptions.AccessTokenUnavailableException>)
  nameWithType.vb: AssertEx.Is(Of AccessTokenUnavailableException)(AccessTokenUnavailableException, AccessTokenUnavailableException, IEqualityComparer(Of AccessTokenUnavailableException))
  fullName.vb: Xunit.AssertEx.Is(Of SharedLib.Exceptions.AccessTokenUnavailableException)(SharedLib.Exceptions.AccessTokenUnavailableException, SharedLib.Exceptions.AccessTokenUnavailableException, System.Collections.Generic.IEqualityComparer(Of SharedLib.Exceptions.AccessTokenUnavailableException))
  name.vb: Is(Of AccessTokenUnavailableException)(AccessTokenUnavailableException, AccessTokenUnavailableException, IEqualityComparer(Of AccessTokenUnavailableException))
  spec.csharp:
  - uid: Xunit.AssertEx.Is``1(SharedLib.Exceptions.AccessTokenUnavailableException,SharedLib.Exceptions.AccessTokenUnavailableException,System.Collections.Generic.IEqualityComparer{SharedLib.Exceptions.AccessTokenUnavailableException})
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: <
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: '>'
  - name: (
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: ','
  - name: " "
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.Is``1(SharedLib.Exceptions.AccessTokenUnavailableException,SharedLib.Exceptions.AccessTokenUnavailableException,System.Collections.Generic.IEqualityComparer{SharedLib.Exceptions.AccessTokenUnavailableException})
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: (
  - name: Of
  - name: " "
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: )
  - name: (
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: ','
  - name: " "
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: )
  - name: )
- uid: SharedLib.Exceptions.AccessTokenUnavailableException.Xunit.AssertEx.Is``1(System.Linq.Expressions.Expression{System.Func{SharedLib.Exceptions.AccessTokenUnavailableException,System.Boolean}},System.String)
  commentId: M:Xunit.AssertEx.Is``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.Is``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  name: Is<AccessTokenUnavailableException>(AccessTokenUnavailableException, Expression<Func<AccessTokenUnavailableException, bool>>, string)
  nameWithType: AssertEx.Is<AccessTokenUnavailableException>(AccessTokenUnavailableException, Expression<Func<AccessTokenUnavailableException, bool>>, string)
  fullName: Xunit.AssertEx.Is<SharedLib.Exceptions.AccessTokenUnavailableException>(SharedLib.Exceptions.AccessTokenUnavailableException, System.Linq.Expressions.Expression<System.Func<SharedLib.Exceptions.AccessTokenUnavailableException, bool>>, string)
  nameWithType.vb: AssertEx.Is(Of AccessTokenUnavailableException)(AccessTokenUnavailableException, Expression(Of Func(Of AccessTokenUnavailableException, Boolean)), String)
  fullName.vb: Xunit.AssertEx.Is(Of SharedLib.Exceptions.AccessTokenUnavailableException)(SharedLib.Exceptions.AccessTokenUnavailableException, System.Linq.Expressions.Expression(Of System.Func(Of SharedLib.Exceptions.AccessTokenUnavailableException, Boolean)), String)
  name.vb: Is(Of AccessTokenUnavailableException)(AccessTokenUnavailableException, Expression(Of Func(Of AccessTokenUnavailableException, Boolean)), String)
  spec.csharp:
  - uid: Xunit.AssertEx.Is``1(SharedLib.Exceptions.AccessTokenUnavailableException,System.Linq.Expressions.Expression{System.Func{SharedLib.Exceptions.AccessTokenUnavailableException,System.Boolean}},System.String)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: <
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: '>'
  - name: (
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.Is``1(SharedLib.Exceptions.AccessTokenUnavailableException,System.Linq.Expressions.Expression{System.Func{SharedLib.Exceptions.AccessTokenUnavailableException,System.Boolean}},System.String)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: )
  - name: (
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: SharedLib.Exceptions.AccessTokenUnavailableException
    name: AccessTokenUnavailableException
    href: SharedLib.Exceptions.AccessTokenUnavailableException.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Object.Xunit.AssertEx.IsInstanceOf``1
  commentId: M:Xunit.AssertEx.IsInstanceOf``1(System.Object)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsInstanceOf``1(System.Object)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsInstanceOf__1_System_Object_
  name: IsInstanceOf<TExpected>(object)
  nameWithType: AssertEx.IsInstanceOf<TExpected>(object)
  fullName: Xunit.AssertEx.IsInstanceOf<TExpected>(object)
  nameWithType.vb: AssertEx.IsInstanceOf(Of TExpected)(Object)
  fullName.vb: Xunit.AssertEx.IsInstanceOf(Of TExpected)(Object)
  name.vb: IsInstanceOf(Of TExpected)(Object)
  spec.csharp:
  - uid: Xunit.AssertEx.IsInstanceOf``1(System.Object)
    name: IsInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsInstanceOf__1_System_Object_
  - name: <
  - name: TExpected
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsInstanceOf``1(System.Object)
    name: IsInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsInstanceOf__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: TExpected
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Xunit.AssertEx.IsNotInstanceOf``1
  commentId: M:Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotInstanceOf__1_System_Object_
  name: IsNotInstanceOf<TWrong>(object)
  nameWithType: AssertEx.IsNotInstanceOf<TWrong>(object)
  fullName: Xunit.AssertEx.IsNotInstanceOf<TWrong>(object)
  nameWithType.vb: AssertEx.IsNotInstanceOf(Of TWrong)(Object)
  fullName.vb: Xunit.AssertEx.IsNotInstanceOf(Of TWrong)(Object)
  name.vb: IsNotInstanceOf(Of TWrong)(Object)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
    name: IsNotInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotInstanceOf__1_System_Object_
  - name: <
  - name: TWrong
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
    name: IsNotInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotInstanceOf__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: TWrong
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.String)
  commentId: M:Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotStructuralEqual_System_Object_System_Object_System_String_
  name: IsNotStructuralEqual(object, object, string)
  nameWithType: AssertEx.IsNotStructuralEqual(object, object, string)
  fullName: Xunit.AssertEx.IsNotStructuralEqual(object, object, string)
  nameWithType.vb: AssertEx.IsNotStructuralEqual(Object, Object, String)
  fullName.vb: Xunit.AssertEx.IsNotStructuralEqual(Object, Object, String)
  name.vb: IsNotStructuralEqual(Object, Object, String)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
    name: IsNotStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
    name: IsNotStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Object.Xunit.AssertEx.IsStructuralEqual(System.Object,System.String)
  commentId: M:Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsStructuralEqual_System_Object_System_Object_System_String_
  name: IsStructuralEqual(object, object, string)
  nameWithType: AssertEx.IsStructuralEqual(object, object, string)
  fullName: Xunit.AssertEx.IsStructuralEqual(object, object, string)
  nameWithType.vb: AssertEx.IsStructuralEqual(Object, Object, String)
  fullName.vb: Xunit.AssertEx.IsStructuralEqual(Object, Object, String)
  name.vb: IsStructuralEqual(Object, Object, String)
  spec.csharp:
  - uid: Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
    name: IsStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
    name: IsStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization
- uid: Xunit.AssertEx.AsDynamic``1(``0)
  commentId: M:Xunit.AssertEx.AsDynamic``1(``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_AsDynamic__1___0_
  name: AsDynamic<T>(T)
  nameWithType: AssertEx.AsDynamic<T>(T)
  fullName: Xunit.AssertEx.AsDynamic<T>(T)
  nameWithType.vb: AssertEx.AsDynamic(Of T)(T)
  fullName.vb: Xunit.AssertEx.AsDynamic(Of T)(T)
  name.vb: AsDynamic(Of T)(T)
  spec.csharp:
  - uid: Xunit.AssertEx.AsDynamic``1(``0)
    name: AsDynamic
    href: Xunit.AssertEx.html#Xunit_AssertEx_AsDynamic__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.AsDynamic``1(``0)
    name: AsDynamic
    href: Xunit.AssertEx.html#Xunit_AssertEx_AsDynamic__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Xunit.AssertEx
  commentId: T:Xunit.AssertEx
  parent: Xunit
  href: Xunit.AssertEx.html
  name: AssertEx
  nameWithType: AssertEx
  fullName: Xunit.AssertEx
- uid: Xunit.AssertEx.IsNotNull``1(``0)
  commentId: M:Xunit.AssertEx.IsNotNull``1(``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotNull__1___0_
  name: IsNotNull<T>(T)
  nameWithType: AssertEx.IsNotNull<T>(T)
  fullName: Xunit.AssertEx.IsNotNull<T>(T)
  nameWithType.vb: AssertEx.IsNotNull(Of T)(T)
  fullName.vb: Xunit.AssertEx.IsNotNull(Of T)(T)
  name.vb: IsNotNull(Of T)(T)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotNull``1(``0)
    name: IsNotNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotNull__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotNull``1(``0)
    name: IsNotNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotNull__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Xunit.AssertEx.IsNotSameReferenceAs``1(``0,``0)
  commentId: M:Xunit.AssertEx.IsNotSameReferenceAs``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotSameReferenceAs__1___0___0_
  name: IsNotSameReferenceAs<T>(T, T)
  nameWithType: AssertEx.IsNotSameReferenceAs<T>(T, T)
  fullName: Xunit.AssertEx.IsNotSameReferenceAs<T>(T, T)
  nameWithType.vb: AssertEx.IsNotSameReferenceAs(Of T)(T, T)
  fullName.vb: Xunit.AssertEx.IsNotSameReferenceAs(Of T)(T, T)
  name.vb: IsNotSameReferenceAs(Of T)(T, T)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotSameReferenceAs``1(``0,``0)
    name: IsNotSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotSameReferenceAs__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotSameReferenceAs``1(``0,``0)
    name: IsNotSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotSameReferenceAs__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Xunit.AssertEx.IsNot``1(``0,``0)
  commentId: M:Xunit.AssertEx.IsNot``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_
  name: IsNot<T>(T, T)
  nameWithType: AssertEx.IsNot<T>(T, T)
  fullName: Xunit.AssertEx.IsNot<T>(T, T)
  nameWithType.vb: AssertEx.IsNot(Of T)(T, T)
  fullName.vb: Xunit.AssertEx.IsNot(Of T)(T, T)
  name.vb: IsNot(Of T)(T, T)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNot``1(``0,``0)
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNot``1(``0,``0)
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Xunit.AssertEx.IsNot``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:Xunit.AssertEx.IsNot``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  name: IsNot<T>(T, T, IEqualityComparer<T>)
  nameWithType: AssertEx.IsNot<T>(T, T, IEqualityComparer<T>)
  fullName: Xunit.AssertEx.IsNot<T>(T, T, System.Collections.Generic.IEqualityComparer<T>)
  nameWithType.vb: AssertEx.IsNot(Of T)(T, T, IEqualityComparer(Of T))
  fullName.vb: Xunit.AssertEx.IsNot(Of T)(T, T, System.Collections.Generic.IEqualityComparer(Of T))
  name.vb: IsNot(Of T)(T, T, IEqualityComparer(Of T))
  spec.csharp:
  - uid: Xunit.AssertEx.IsNot``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNot``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Xunit.AssertEx.IsNull``1(``0)
  commentId: M:Xunit.AssertEx.IsNull``1(``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNull__1___0_
  name: IsNull<T>(T)
  nameWithType: AssertEx.IsNull<T>(T)
  fullName: Xunit.AssertEx.IsNull<T>(T)
  nameWithType.vb: AssertEx.IsNull(Of T)(T)
  fullName.vb: Xunit.AssertEx.IsNull(Of T)(T)
  name.vb: IsNull(Of T)(T)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNull``1(``0)
    name: IsNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNull__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNull``1(``0)
    name: IsNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNull__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Xunit.AssertEx.IsSameReferenceAs``1(``0,``0)
  commentId: M:Xunit.AssertEx.IsSameReferenceAs``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsSameReferenceAs__1___0___0_
  name: IsSameReferenceAs<T>(T, T)
  nameWithType: AssertEx.IsSameReferenceAs<T>(T, T)
  fullName: Xunit.AssertEx.IsSameReferenceAs<T>(T, T)
  nameWithType.vb: AssertEx.IsSameReferenceAs(Of T)(T, T)
  fullName.vb: Xunit.AssertEx.IsSameReferenceAs(Of T)(T, T)
  name.vb: IsSameReferenceAs(Of T)(T, T)
  spec.csharp:
  - uid: Xunit.AssertEx.IsSameReferenceAs``1(``0,``0)
    name: IsSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsSameReferenceAs__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsSameReferenceAs``1(``0,``0)
    name: IsSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsSameReferenceAs__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Xunit.AssertEx.Is``1(``0,``0)
  commentId: M:Xunit.AssertEx.Is``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_
  name: Is<T>(T, T)
  nameWithType: AssertEx.Is<T>(T, T)
  fullName: Xunit.AssertEx.Is<T>(T, T)
  nameWithType.vb: AssertEx.Is(Of T)(T, T)
  fullName.vb: Xunit.AssertEx.Is(Of T)(T, T)
  name.vb: Is(Of T)(T, T)
  spec.csharp:
  - uid: Xunit.AssertEx.Is``1(``0,``0)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.Is``1(``0,``0)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Xunit.AssertEx.Is``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:Xunit.AssertEx.Is``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  name: Is<T>(T, T, IEqualityComparer<T>)
  nameWithType: AssertEx.Is<T>(T, T, IEqualityComparer<T>)
  fullName: Xunit.AssertEx.Is<T>(T, T, System.Collections.Generic.IEqualityComparer<T>)
  nameWithType.vb: AssertEx.Is(Of T)(T, T, IEqualityComparer(Of T))
  fullName.vb: Xunit.AssertEx.Is(Of T)(T, T, System.Collections.Generic.IEqualityComparer(Of T))
  name.vb: Is(Of T)(T, T, IEqualityComparer(Of T))
  spec.csharp:
  - uid: Xunit.AssertEx.Is``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.Is``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Xunit.AssertEx.Is``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  commentId: M:Xunit.AssertEx.Is``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  isExternal: true
  href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  name: Is<T>(T, Expression<Func<T, bool>>, string)
  nameWithType: AssertEx.Is<T>(T, Expression<Func<T, bool>>, string)
  fullName: Xunit.AssertEx.Is<T>(T, System.Linq.Expressions.Expression<System.Func<T, bool>>, string)
  nameWithType.vb: AssertEx.Is(Of T)(T, Expression(Of Func(Of T, Boolean)), String)
  fullName.vb: Xunit.AssertEx.Is(Of T)(T, System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), String)
  name.vb: Is(Of T)(T, Expression(Of Func(Of T, Boolean)), String)
  spec.csharp:
  - uid: Xunit.AssertEx.Is``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.Is``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Xunit.AssertEx.IsInstanceOf``1(System.Object)
  commentId: M:Xunit.AssertEx.IsInstanceOf``1(System.Object)
  isExternal: true
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsInstanceOf__1_System_Object_
  name: IsInstanceOf<TExpected>(object)
  nameWithType: AssertEx.IsInstanceOf<TExpected>(object)
  fullName: Xunit.AssertEx.IsInstanceOf<TExpected>(object)
  nameWithType.vb: AssertEx.IsInstanceOf(Of TExpected)(Object)
  fullName.vb: Xunit.AssertEx.IsInstanceOf(Of TExpected)(Object)
  name.vb: IsInstanceOf(Of TExpected)(Object)
  spec.csharp:
  - uid: Xunit.AssertEx.IsInstanceOf``1(System.Object)
    name: IsInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsInstanceOf__1_System_Object_
  - name: <
  - name: TExpected
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsInstanceOf``1(System.Object)
    name: IsInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsInstanceOf__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: TExpected
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
  commentId: M:Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
  isExternal: true
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotInstanceOf__1_System_Object_
  name: IsNotInstanceOf<TWrong>(object)
  nameWithType: AssertEx.IsNotInstanceOf<TWrong>(object)
  fullName: Xunit.AssertEx.IsNotInstanceOf<TWrong>(object)
  nameWithType.vb: AssertEx.IsNotInstanceOf(Of TWrong)(Object)
  fullName.vb: Xunit.AssertEx.IsNotInstanceOf(Of TWrong)(Object)
  name.vb: IsNotInstanceOf(Of TWrong)(Object)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
    name: IsNotInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotInstanceOf__1_System_Object_
  - name: <
  - name: TWrong
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
    name: IsNotInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotInstanceOf__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: TWrong
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
  commentId: M:Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
  isExternal: true
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotStructuralEqual_System_Object_System_Object_System_String_
  name: IsNotStructuralEqual(object, object, string)
  nameWithType: AssertEx.IsNotStructuralEqual(object, object, string)
  fullName: Xunit.AssertEx.IsNotStructuralEqual(object, object, string)
  nameWithType.vb: AssertEx.IsNotStructuralEqual(Object, Object, String)
  fullName.vb: Xunit.AssertEx.IsNotStructuralEqual(Object, Object, String)
  name.vb: IsNotStructuralEqual(Object, Object, String)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
    name: IsNotStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
    name: IsNotStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
  commentId: M:Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
  isExternal: true
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsStructuralEqual_System_Object_System_Object_System_String_
  name: IsStructuralEqual(object, object, string)
  nameWithType: AssertEx.IsStructuralEqual(object, object, string)
  fullName: Xunit.AssertEx.IsStructuralEqual(object, object, string)
  nameWithType.vb: AssertEx.IsStructuralEqual(Object, Object, String)
  fullName.vb: Xunit.AssertEx.IsStructuralEqual(Object, Object, String)
  name.vb: IsStructuralEqual(Object, Object, String)
  spec.csharp:
  - uid: Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
    name: IsStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
    name: IsStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Xunit
  commentId: N:Xunit
  href: Xunit.html
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: SharedLib.Exceptions.AccessTokenUnavailableException.#ctor*
  commentId: Overload:SharedLib.Exceptions.AccessTokenUnavailableException.#ctor
  href: SharedLib.Exceptions.AccessTokenUnavailableException.html#SharedLib_Exceptions_AccessTokenUnavailableException__ctor_System_String_
  name: AccessTokenUnavailableException
  nameWithType: AccessTokenUnavailableException.AccessTokenUnavailableException
  fullName: SharedLib.Exceptions.AccessTokenUnavailableException.AccessTokenUnavailableException
  nameWithType.vb: AccessTokenUnavailableException.New
  fullName.vb: SharedLib.Exceptions.AccessTokenUnavailableException.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
