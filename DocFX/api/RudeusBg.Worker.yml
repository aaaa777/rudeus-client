### YamlMime:ManagedReference
items:
- uid: RudeusBg.Worker
  commentId: T:RudeusBg.Worker
  id: Worker
  parent: RudeusBg
  children:
  - RudeusBg.Worker.#ctor(Microsoft.Extensions.Logging.ILogger{RudeusBg.Worker},Rudeus.Procedure.IProcedure,Rudeus.Procedure.IProcedure,Rudeus.Procedure.IProcedure)
  - RudeusBg.Worker.AccessTokenValidator
  - RudeusBg.Worker.ExecuteAsync(System.Threading.CancellationToken)
  - RudeusBg.Worker.ScheduledRelularExecuter
  - RudeusBg.Worker.UserLoginExecuter
  - RudeusBg.Worker.settings
  langs:
  - csharp
  - vb
  name: Worker
  nameWithType: Worker
  fullName: RudeusBg.Worker
  type: Class
  source:
    remote:
      path: RudeusBg/Worker.cs
      branch: master
      repo: https://github.com/aaaa777/rudeus-client.git
    id: Worker
    path: ../RudeusBg/Worker.cs
    startLine: 13
  assemblies:
  - RudeusBg
  namespace: RudeusBg
  syntax:
    content: 'public class Worker : BackgroundService, IHostedService, IDisposable, IWorker'
    content.vb: Public Class Worker Inherits BackgroundService Implements IHostedService, IDisposable, IWorker
  inheritance:
  - System.Object
  - Microsoft.Extensions.Hosting.BackgroundService
  implements:
  - Microsoft.Extensions.Hosting.IHostedService
  - System.IDisposable
  - RudeusBg.IWorker
  inheritedMembers:
  - Microsoft.Extensions.Hosting.BackgroundService.StartAsync(System.Threading.CancellationToken)
  - Microsoft.Extensions.Hosting.BackgroundService.StopAsync(System.Threading.CancellationToken)
  - Microsoft.Extensions.Hosting.BackgroundService.Dispose
  - Microsoft.Extensions.Hosting.BackgroundService.ExecuteTask
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - RudeusBg.Worker.Xunit.AssertEx.AsDynamic``1
  - RudeusBg.Worker.Xunit.AssertEx.AsDynamic``1
  - RudeusBg.Worker.Xunit.AssertEx.AsDynamic``1
  - RudeusBg.Worker.Xunit.AssertEx.IsNotNull``1
  - RudeusBg.Worker.Xunit.AssertEx.IsNotNull``1
  - RudeusBg.Worker.Xunit.AssertEx.IsNotNull``1
  - RudeusBg.Worker.Xunit.AssertEx.IsNotSameReferenceAs``1(RudeusBg.Worker)
  - RudeusBg.Worker.Xunit.AssertEx.IsNotSameReferenceAs``1(RudeusBg.Worker)
  - RudeusBg.Worker.Xunit.AssertEx.IsNotSameReferenceAs``1(RudeusBg.Worker)
  - RudeusBg.Worker.Xunit.AssertEx.IsNot``1(RudeusBg.Worker)
  - RudeusBg.Worker.Xunit.AssertEx.IsNot``1(RudeusBg.Worker)
  - RudeusBg.Worker.Xunit.AssertEx.IsNot``1(RudeusBg.Worker)
  - RudeusBg.Worker.Xunit.AssertEx.IsNot``1(RudeusBg.Worker,System.Collections.Generic.IEqualityComparer{RudeusBg.Worker})
  - RudeusBg.Worker.Xunit.AssertEx.IsNot``1(RudeusBg.Worker,System.Collections.Generic.IEqualityComparer{RudeusBg.Worker})
  - RudeusBg.Worker.Xunit.AssertEx.IsNot``1(RudeusBg.Worker,System.Collections.Generic.IEqualityComparer{RudeusBg.Worker})
  - RudeusBg.Worker.Xunit.AssertEx.IsNull``1
  - RudeusBg.Worker.Xunit.AssertEx.IsNull``1
  - RudeusBg.Worker.Xunit.AssertEx.IsNull``1
  - RudeusBg.Worker.Xunit.AssertEx.IsSameReferenceAs``1(RudeusBg.Worker)
  - RudeusBg.Worker.Xunit.AssertEx.IsSameReferenceAs``1(RudeusBg.Worker)
  - RudeusBg.Worker.Xunit.AssertEx.IsSameReferenceAs``1(RudeusBg.Worker)
  - RudeusBg.Worker.Xunit.AssertEx.Is``1(RudeusBg.Worker)
  - RudeusBg.Worker.Xunit.AssertEx.Is``1(RudeusBg.Worker)
  - RudeusBg.Worker.Xunit.AssertEx.Is``1(RudeusBg.Worker)
  - RudeusBg.Worker.Xunit.AssertEx.Is``1(RudeusBg.Worker,System.Collections.Generic.IEqualityComparer{RudeusBg.Worker})
  - RudeusBg.Worker.Xunit.AssertEx.Is``1(RudeusBg.Worker,System.Collections.Generic.IEqualityComparer{RudeusBg.Worker})
  - RudeusBg.Worker.Xunit.AssertEx.Is``1(RudeusBg.Worker,System.Collections.Generic.IEqualityComparer{RudeusBg.Worker})
  - RudeusBg.Worker.Xunit.AssertEx.Is``1(System.Linq.Expressions.Expression{System.Func{RudeusBg.Worker,System.Boolean}},System.String)
  - RudeusBg.Worker.Xunit.AssertEx.Is``1(System.Linq.Expressions.Expression{System.Func{RudeusBg.Worker,System.Boolean}},System.String)
  - RudeusBg.Worker.Xunit.AssertEx.Is``1(System.Linq.Expressions.Expression{System.Func{RudeusBg.Worker,System.Boolean}},System.String)
  - System.Object.Xunit.AssertEx.IsInstanceOf``1
  - System.Object.Xunit.AssertEx.IsInstanceOf``1
  - System.Object.Xunit.AssertEx.IsInstanceOf``1
  - System.Object.Xunit.AssertEx.IsNotInstanceOf``1
  - System.Object.Xunit.AssertEx.IsNotInstanceOf``1
  - System.Object.Xunit.AssertEx.IsNotInstanceOf``1
  - System.Object.Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.String)
  - System.Object.Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.String)
  - System.Object.Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.String)
  - System.Object.Xunit.AssertEx.IsStructuralEqual(System.Object,System.String)
  - System.Object.Xunit.AssertEx.IsStructuralEqual(System.Object,System.String)
  - System.Object.Xunit.AssertEx.IsStructuralEqual(System.Object,System.String)
- uid: RudeusBg.Worker.AccessTokenValidator
  commentId: P:RudeusBg.Worker.AccessTokenValidator
  id: AccessTokenValidator
  parent: RudeusBg.Worker
  langs:
  - csharp
  - vb
  name: AccessTokenValidator
  nameWithType: Worker.AccessTokenValidator
  fullName: RudeusBg.Worker.AccessTokenValidator
  type: Property
  source:
    remote:
      path: RudeusBg/Worker.cs
      branch: master
      repo: https://github.com/aaaa777/rudeus-client.git
    id: AccessTokenValidator
    path: ../RudeusBg/Worker.cs
    startLine: 19
  assemblies:
  - RudeusBg
  namespace: RudeusBg
  example: []
  syntax:
    content: public IProcedure AccessTokenValidator { get; set; }
    parameters: []
    return:
      type: Rudeus.Procedure.IProcedure
    content.vb: Public Property AccessTokenValidator As IProcedure
  overload: RudeusBg.Worker.AccessTokenValidator*
  implements:
  - RudeusBg.IWorker.AccessTokenValidator
- uid: RudeusBg.Worker.ScheduledRelularExecuter
  commentId: P:RudeusBg.Worker.ScheduledRelularExecuter
  id: ScheduledRelularExecuter
  parent: RudeusBg.Worker
  langs:
  - csharp
  - vb
  name: ScheduledRelularExecuter
  nameWithType: Worker.ScheduledRelularExecuter
  fullName: RudeusBg.Worker.ScheduledRelularExecuter
  type: Property
  source:
    remote:
      path: RudeusBg/Worker.cs
      branch: master
      repo: https://github.com/aaaa777/rudeus-client.git
    id: ScheduledRelularExecuter
    path: ../RudeusBg/Worker.cs
    startLine: 20
  assemblies:
  - RudeusBg
  namespace: RudeusBg
  example: []
  syntax:
    content: public IProcedure ScheduledRelularExecuter { get; set; }
    parameters: []
    return:
      type: Rudeus.Procedure.IProcedure
    content.vb: Public Property ScheduledRelularExecuter As IProcedure
  overload: RudeusBg.Worker.ScheduledRelularExecuter*
  implements:
  - RudeusBg.IWorker.ScheduledRelularExecuter
- uid: RudeusBg.Worker.UserLoginExecuter
  commentId: P:RudeusBg.Worker.UserLoginExecuter
  id: UserLoginExecuter
  parent: RudeusBg.Worker
  langs:
  - csharp
  - vb
  name: UserLoginExecuter
  nameWithType: Worker.UserLoginExecuter
  fullName: RudeusBg.Worker.UserLoginExecuter
  type: Property
  source:
    remote:
      path: RudeusBg/Worker.cs
      branch: master
      repo: https://github.com/aaaa777/rudeus-client.git
    id: UserLoginExecuter
    path: ../RudeusBg/Worker.cs
    startLine: 21
  assemblies:
  - RudeusBg
  namespace: RudeusBg
  example: []
  syntax:
    content: public IProcedure UserLoginExecuter { get; set; }
    parameters: []
    return:
      type: Rudeus.Procedure.IProcedure
    content.vb: Public Property UserLoginExecuter As IProcedure
  overload: RudeusBg.Worker.UserLoginExecuter*
  implements:
  - RudeusBg.IWorker.UserLoginExecuter
- uid: RudeusBg.Worker.settings
  commentId: P:RudeusBg.Worker.settings
  id: settings
  parent: RudeusBg.Worker
  langs:
  - csharp
  - vb
  name: settings
  nameWithType: Worker.settings
  fullName: RudeusBg.Worker.settings
  type: Property
  source:
    remote:
      path: RudeusBg/Worker.cs
      branch: master
      repo: https://github.com/aaaa777/rudeus-client.git
    id: settings
    path: ../RudeusBg/Worker.cs
    startLine: 23
  assemblies:
  - RudeusBg
  namespace: RudeusBg
  syntax:
    content: public static Settings settings { get; set; }
    parameters: []
    return:
      type: Rudeus.Model.Settings
    content.vb: Public Shared Property settings As Settings
  overload: RudeusBg.Worker.settings*
- uid: RudeusBg.Worker.#ctor(Microsoft.Extensions.Logging.ILogger{RudeusBg.Worker},Rudeus.Procedure.IProcedure,Rudeus.Procedure.IProcedure,Rudeus.Procedure.IProcedure)
  commentId: M:RudeusBg.Worker.#ctor(Microsoft.Extensions.Logging.ILogger{RudeusBg.Worker},Rudeus.Procedure.IProcedure,Rudeus.Procedure.IProcedure,Rudeus.Procedure.IProcedure)
  id: '#ctor(Microsoft.Extensions.Logging.ILogger{RudeusBg.Worker},Rudeus.Procedure.IProcedure,Rudeus.Procedure.IProcedure,Rudeus.Procedure.IProcedure)'
  parent: RudeusBg.Worker
  langs:
  - csharp
  - vb
  name: Worker(ILogger<Worker>, IProcedure?, IProcedure?, IProcedure?)
  nameWithType: Worker.Worker(ILogger<Worker>, IProcedure?, IProcedure?, IProcedure?)
  fullName: RudeusBg.Worker.Worker(Microsoft.Extensions.Logging.ILogger<RudeusBg.Worker>, Rudeus.Procedure.IProcedure?, Rudeus.Procedure.IProcedure?, Rudeus.Procedure.IProcedure?)
  type: Constructor
  source:
    remote:
      path: RudeusBg/Worker.cs
      branch: master
      repo: https://github.com/aaaa777/rudeus-client.git
    id: .ctor
    path: ../RudeusBg/Worker.cs
    startLine: 25
  assemblies:
  - RudeusBg
  namespace: RudeusBg
  syntax:
    content: public Worker(ILogger<Worker> logger, IProcedure? at = null, IProcedure? sr = null, IProcedure? ul = null)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{RudeusBg.Worker}
    - id: at
      type: Rudeus.Procedure.IProcedure
    - id: sr
      type: Rudeus.Procedure.IProcedure
    - id: ul
      type: Rudeus.Procedure.IProcedure
    content.vb: Public Sub New(logger As ILogger(Of Worker), at As IProcedure = Nothing, sr As IProcedure = Nothing, ul As IProcedure = Nothing)
  overload: RudeusBg.Worker.#ctor*
  nameWithType.vb: Worker.New(ILogger(Of Worker), IProcedure, IProcedure, IProcedure)
  fullName.vb: RudeusBg.Worker.New(Microsoft.Extensions.Logging.ILogger(Of RudeusBg.Worker), Rudeus.Procedure.IProcedure, Rudeus.Procedure.IProcedure, Rudeus.Procedure.IProcedure)
  name.vb: New(ILogger(Of Worker), IProcedure, IProcedure, IProcedure)
- uid: RudeusBg.Worker.ExecuteAsync(System.Threading.CancellationToken)
  commentId: M:RudeusBg.Worker.ExecuteAsync(System.Threading.CancellationToken)
  id: ExecuteAsync(System.Threading.CancellationToken)
  parent: RudeusBg.Worker
  langs:
  - csharp
  - vb
  name: ExecuteAsync(CancellationToken)
  nameWithType: Worker.ExecuteAsync(CancellationToken)
  fullName: RudeusBg.Worker.ExecuteAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: RudeusBg/Worker.cs
      branch: master
      repo: https://github.com/aaaa777/rudeus-client.git
    id: ExecuteAsync
    path: ../RudeusBg/Worker.cs
    startLine: 35
  assemblies:
  - RudeusBg
  namespace: RudeusBg
  summary: >-
    This method is called when the <xref href="Microsoft.Extensions.Hosting.IHostedService" data-throw-if-not-resolved="false"></xref> starts. The implementation should return a task that represents

    the lifetime of the long running operation(s) being performed.
  remarks: See <a href="https://docs.microsoft.com/dotnet/core/extensions/workers">Worker Services in .NET</a> for implementation guidelines.
  example: []
  syntax:
    content: protected override Task ExecuteAsync(CancellationToken stoppingToken)
    parameters:
    - id: stoppingToken
      type: System.Threading.CancellationToken
      description: Triggered when <xref href="Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref> is called.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the long running operations.
    content.vb: Protected Overrides Function ExecuteAsync(stoppingToken As CancellationToken) As Task
  overridden: Microsoft.Extensions.Hosting.BackgroundService.ExecuteAsync(System.Threading.CancellationToken)
  overload: RudeusBg.Worker.ExecuteAsync*
references:
- uid: RudeusBg
  commentId: N:RudeusBg
  href: RudeusBg.html
  name: RudeusBg
  nameWithType: RudeusBg
  fullName: RudeusBg
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Microsoft.Extensions.Hosting.BackgroundService
  commentId: T:Microsoft.Extensions.Hosting.BackgroundService
  parent: Microsoft.Extensions.Hosting
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice
  name: BackgroundService
  nameWithType: BackgroundService
  fullName: Microsoft.Extensions.Hosting.BackgroundService
- uid: Microsoft.Extensions.Hosting.IHostedService
  commentId: T:Microsoft.Extensions.Hosting.IHostedService
  parent: Microsoft.Extensions.Hosting
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostedservice
  name: IHostedService
  nameWithType: IHostedService
  fullName: Microsoft.Extensions.Hosting.IHostedService
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: RudeusBg.IWorker
  commentId: T:RudeusBg.IWorker
  parent: RudeusBg
  href: RudeusBg.IWorker.html
  name: IWorker
  nameWithType: IWorker
  fullName: RudeusBg.IWorker
- uid: Microsoft.Extensions.Hosting.BackgroundService.StartAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Extensions.Hosting.BackgroundService.StartAsync(System.Threading.CancellationToken)
  parent: Microsoft.Extensions.Hosting.BackgroundService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.startasync
  name: StartAsync(CancellationToken)
  nameWithType: BackgroundService.StartAsync(CancellationToken)
  fullName: Microsoft.Extensions.Hosting.BackgroundService.StartAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.StartAsync(System.Threading.CancellationToken)
    name: StartAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.startasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.StartAsync(System.Threading.CancellationToken)
    name: StartAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.startasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Microsoft.Extensions.Hosting.BackgroundService.StopAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Extensions.Hosting.BackgroundService.StopAsync(System.Threading.CancellationToken)
  parent: Microsoft.Extensions.Hosting.BackgroundService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.stopasync
  name: StopAsync(CancellationToken)
  nameWithType: BackgroundService.StopAsync(CancellationToken)
  fullName: Microsoft.Extensions.Hosting.BackgroundService.StopAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.StopAsync(System.Threading.CancellationToken)
    name: StopAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.stopasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.StopAsync(System.Threading.CancellationToken)
    name: StopAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.stopasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Microsoft.Extensions.Hosting.BackgroundService.Dispose
  commentId: M:Microsoft.Extensions.Hosting.BackgroundService.Dispose
  parent: Microsoft.Extensions.Hosting.BackgroundService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.dispose
  name: Dispose()
  nameWithType: BackgroundService.Dispose()
  fullName: Microsoft.Extensions.Hosting.BackgroundService.Dispose()
  spec.csharp:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.dispose
  - name: (
  - name: )
- uid: Microsoft.Extensions.Hosting.BackgroundService.ExecuteTask
  commentId: P:Microsoft.Extensions.Hosting.BackgroundService.ExecuteTask
  parent: Microsoft.Extensions.Hosting.BackgroundService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.executetask
  name: ExecuteTask
  nameWithType: BackgroundService.ExecuteTask
  fullName: Microsoft.Extensions.Hosting.BackgroundService.ExecuteTask
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: RudeusBg.Worker.Xunit.AssertEx.AsDynamic``1
  commentId: M:Xunit.AssertEx.AsDynamic``1(``0)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.AsDynamic``1(``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_AsDynamic__1___0_
  name: AsDynamic<Worker>(Worker)
  nameWithType: AssertEx.AsDynamic<Worker>(Worker)
  fullName: Xunit.AssertEx.AsDynamic<RudeusBg.Worker>(RudeusBg.Worker)
  nameWithType.vb: AssertEx.AsDynamic(Of Worker)(Worker)
  fullName.vb: Xunit.AssertEx.AsDynamic(Of RudeusBg.Worker)(RudeusBg.Worker)
  name.vb: AsDynamic(Of Worker)(Worker)
  spec.csharp:
  - uid: Xunit.AssertEx.AsDynamic``1(RudeusBg.Worker)
    name: AsDynamic
    href: Xunit.AssertEx.html#Xunit_AssertEx_AsDynamic__1___0_
  - name: <
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: '>'
  - name: (
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.AsDynamic``1(RudeusBg.Worker)
    name: AsDynamic
    href: Xunit.AssertEx.html#Xunit_AssertEx_AsDynamic__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: )
  - name: (
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: )
- uid: RudeusBg.Worker.Xunit.AssertEx.IsNotNull``1
  commentId: M:Xunit.AssertEx.IsNotNull``1(``0)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsNotNull``1(``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotNull__1___0_
  name: IsNotNull<Worker>(Worker)
  nameWithType: AssertEx.IsNotNull<Worker>(Worker)
  fullName: Xunit.AssertEx.IsNotNull<RudeusBg.Worker>(RudeusBg.Worker)
  nameWithType.vb: AssertEx.IsNotNull(Of Worker)(Worker)
  fullName.vb: Xunit.AssertEx.IsNotNull(Of RudeusBg.Worker)(RudeusBg.Worker)
  name.vb: IsNotNull(Of Worker)(Worker)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotNull``1(RudeusBg.Worker)
    name: IsNotNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotNull__1___0_
  - name: <
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: '>'
  - name: (
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotNull``1(RudeusBg.Worker)
    name: IsNotNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotNull__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: )
  - name: (
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: )
- uid: RudeusBg.Worker.Xunit.AssertEx.IsNotSameReferenceAs``1(RudeusBg.Worker)
  commentId: M:Xunit.AssertEx.IsNotSameReferenceAs``1(``0,``0)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsNotSameReferenceAs``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotSameReferenceAs__1___0___0_
  name: IsNotSameReferenceAs<Worker>(Worker, Worker)
  nameWithType: AssertEx.IsNotSameReferenceAs<Worker>(Worker, Worker)
  fullName: Xunit.AssertEx.IsNotSameReferenceAs<RudeusBg.Worker>(RudeusBg.Worker, RudeusBg.Worker)
  nameWithType.vb: AssertEx.IsNotSameReferenceAs(Of Worker)(Worker, Worker)
  fullName.vb: Xunit.AssertEx.IsNotSameReferenceAs(Of RudeusBg.Worker)(RudeusBg.Worker, RudeusBg.Worker)
  name.vb: IsNotSameReferenceAs(Of Worker)(Worker, Worker)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotSameReferenceAs``1(RudeusBg.Worker,RudeusBg.Worker)
    name: IsNotSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotSameReferenceAs__1___0___0_
  - name: <
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: '>'
  - name: (
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: ','
  - name: " "
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotSameReferenceAs``1(RudeusBg.Worker,RudeusBg.Worker)
    name: IsNotSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotSameReferenceAs__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: )
  - name: (
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: ','
  - name: " "
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: )
- uid: RudeusBg.Worker.Xunit.AssertEx.IsNot``1(RudeusBg.Worker)
  commentId: M:Xunit.AssertEx.IsNot``1(``0,``0)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsNot``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_
  name: IsNot<Worker>(Worker, Worker)
  nameWithType: AssertEx.IsNot<Worker>(Worker, Worker)
  fullName: Xunit.AssertEx.IsNot<RudeusBg.Worker>(RudeusBg.Worker, RudeusBg.Worker)
  nameWithType.vb: AssertEx.IsNot(Of Worker)(Worker, Worker)
  fullName.vb: Xunit.AssertEx.IsNot(Of RudeusBg.Worker)(RudeusBg.Worker, RudeusBg.Worker)
  name.vb: IsNot(Of Worker)(Worker, Worker)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNot``1(RudeusBg.Worker,RudeusBg.Worker)
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_
  - name: <
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: '>'
  - name: (
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: ','
  - name: " "
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNot``1(RudeusBg.Worker,RudeusBg.Worker)
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: )
  - name: (
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: ','
  - name: " "
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: )
- uid: RudeusBg.Worker.Xunit.AssertEx.IsNot``1(RudeusBg.Worker,System.Collections.Generic.IEqualityComparer{RudeusBg.Worker})
  commentId: M:Xunit.AssertEx.IsNot``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsNot``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  name: IsNot<Worker>(Worker, Worker, IEqualityComparer<Worker>)
  nameWithType: AssertEx.IsNot<Worker>(Worker, Worker, IEqualityComparer<Worker>)
  fullName: Xunit.AssertEx.IsNot<RudeusBg.Worker>(RudeusBg.Worker, RudeusBg.Worker, System.Collections.Generic.IEqualityComparer<RudeusBg.Worker>)
  nameWithType.vb: AssertEx.IsNot(Of Worker)(Worker, Worker, IEqualityComparer(Of Worker))
  fullName.vb: Xunit.AssertEx.IsNot(Of RudeusBg.Worker)(RudeusBg.Worker, RudeusBg.Worker, System.Collections.Generic.IEqualityComparer(Of RudeusBg.Worker))
  name.vb: IsNot(Of Worker)(Worker, Worker, IEqualityComparer(Of Worker))
  spec.csharp:
  - uid: Xunit.AssertEx.IsNot``1(RudeusBg.Worker,RudeusBg.Worker,System.Collections.Generic.IEqualityComparer{RudeusBg.Worker})
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: <
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: '>'
  - name: (
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: ','
  - name: " "
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNot``1(RudeusBg.Worker,RudeusBg.Worker,System.Collections.Generic.IEqualityComparer{RudeusBg.Worker})
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: (
  - name: Of
  - name: " "
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: )
  - name: (
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: ','
  - name: " "
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: )
  - name: )
- uid: RudeusBg.Worker.Xunit.AssertEx.IsNull``1
  commentId: M:Xunit.AssertEx.IsNull``1(``0)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsNull``1(``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNull__1___0_
  name: IsNull<Worker>(Worker)
  nameWithType: AssertEx.IsNull<Worker>(Worker)
  fullName: Xunit.AssertEx.IsNull<RudeusBg.Worker>(RudeusBg.Worker)
  nameWithType.vb: AssertEx.IsNull(Of Worker)(Worker)
  fullName.vb: Xunit.AssertEx.IsNull(Of RudeusBg.Worker)(RudeusBg.Worker)
  name.vb: IsNull(Of Worker)(Worker)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNull``1(RudeusBg.Worker)
    name: IsNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNull__1___0_
  - name: <
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: '>'
  - name: (
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNull``1(RudeusBg.Worker)
    name: IsNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNull__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: )
  - name: (
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: )
- uid: RudeusBg.Worker.Xunit.AssertEx.IsSameReferenceAs``1(RudeusBg.Worker)
  commentId: M:Xunit.AssertEx.IsSameReferenceAs``1(``0,``0)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsSameReferenceAs``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsSameReferenceAs__1___0___0_
  name: IsSameReferenceAs<Worker>(Worker, Worker)
  nameWithType: AssertEx.IsSameReferenceAs<Worker>(Worker, Worker)
  fullName: Xunit.AssertEx.IsSameReferenceAs<RudeusBg.Worker>(RudeusBg.Worker, RudeusBg.Worker)
  nameWithType.vb: AssertEx.IsSameReferenceAs(Of Worker)(Worker, Worker)
  fullName.vb: Xunit.AssertEx.IsSameReferenceAs(Of RudeusBg.Worker)(RudeusBg.Worker, RudeusBg.Worker)
  name.vb: IsSameReferenceAs(Of Worker)(Worker, Worker)
  spec.csharp:
  - uid: Xunit.AssertEx.IsSameReferenceAs``1(RudeusBg.Worker,RudeusBg.Worker)
    name: IsSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsSameReferenceAs__1___0___0_
  - name: <
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: '>'
  - name: (
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: ','
  - name: " "
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsSameReferenceAs``1(RudeusBg.Worker,RudeusBg.Worker)
    name: IsSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsSameReferenceAs__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: )
  - name: (
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: ','
  - name: " "
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: )
- uid: RudeusBg.Worker.Xunit.AssertEx.Is``1(RudeusBg.Worker)
  commentId: M:Xunit.AssertEx.Is``1(``0,``0)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.Is``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_
  name: Is<Worker>(Worker, Worker)
  nameWithType: AssertEx.Is<Worker>(Worker, Worker)
  fullName: Xunit.AssertEx.Is<RudeusBg.Worker>(RudeusBg.Worker, RudeusBg.Worker)
  nameWithType.vb: AssertEx.Is(Of Worker)(Worker, Worker)
  fullName.vb: Xunit.AssertEx.Is(Of RudeusBg.Worker)(RudeusBg.Worker, RudeusBg.Worker)
  name.vb: Is(Of Worker)(Worker, Worker)
  spec.csharp:
  - uid: Xunit.AssertEx.Is``1(RudeusBg.Worker,RudeusBg.Worker)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_
  - name: <
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: '>'
  - name: (
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: ','
  - name: " "
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.Is``1(RudeusBg.Worker,RudeusBg.Worker)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: )
  - name: (
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: ','
  - name: " "
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: )
- uid: RudeusBg.Worker.Xunit.AssertEx.Is``1(RudeusBg.Worker,System.Collections.Generic.IEqualityComparer{RudeusBg.Worker})
  commentId: M:Xunit.AssertEx.Is``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.Is``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  name: Is<Worker>(Worker, Worker, IEqualityComparer<Worker>)
  nameWithType: AssertEx.Is<Worker>(Worker, Worker, IEqualityComparer<Worker>)
  fullName: Xunit.AssertEx.Is<RudeusBg.Worker>(RudeusBg.Worker, RudeusBg.Worker, System.Collections.Generic.IEqualityComparer<RudeusBg.Worker>)
  nameWithType.vb: AssertEx.Is(Of Worker)(Worker, Worker, IEqualityComparer(Of Worker))
  fullName.vb: Xunit.AssertEx.Is(Of RudeusBg.Worker)(RudeusBg.Worker, RudeusBg.Worker, System.Collections.Generic.IEqualityComparer(Of RudeusBg.Worker))
  name.vb: Is(Of Worker)(Worker, Worker, IEqualityComparer(Of Worker))
  spec.csharp:
  - uid: Xunit.AssertEx.Is``1(RudeusBg.Worker,RudeusBg.Worker,System.Collections.Generic.IEqualityComparer{RudeusBg.Worker})
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: <
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: '>'
  - name: (
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: ','
  - name: " "
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.Is``1(RudeusBg.Worker,RudeusBg.Worker,System.Collections.Generic.IEqualityComparer{RudeusBg.Worker})
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: (
  - name: Of
  - name: " "
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: )
  - name: (
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: ','
  - name: " "
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: )
  - name: )
- uid: RudeusBg.Worker.Xunit.AssertEx.Is``1(System.Linq.Expressions.Expression{System.Func{RudeusBg.Worker,System.Boolean}},System.String)
  commentId: M:Xunit.AssertEx.Is``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.Is``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  name: Is<Worker>(Worker, Expression<Func<Worker, bool>>, string)
  nameWithType: AssertEx.Is<Worker>(Worker, Expression<Func<Worker, bool>>, string)
  fullName: Xunit.AssertEx.Is<RudeusBg.Worker>(RudeusBg.Worker, System.Linq.Expressions.Expression<System.Func<RudeusBg.Worker, bool>>, string)
  nameWithType.vb: AssertEx.Is(Of Worker)(Worker, Expression(Of Func(Of Worker, Boolean)), String)
  fullName.vb: Xunit.AssertEx.Is(Of RudeusBg.Worker)(RudeusBg.Worker, System.Linq.Expressions.Expression(Of System.Func(Of RudeusBg.Worker, Boolean)), String)
  name.vb: Is(Of Worker)(Worker, Expression(Of Func(Of Worker, Boolean)), String)
  spec.csharp:
  - uid: Xunit.AssertEx.Is``1(RudeusBg.Worker,System.Linq.Expressions.Expression{System.Func{RudeusBg.Worker,System.Boolean}},System.String)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: <
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: '>'
  - name: (
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.Is``1(RudeusBg.Worker,System.Linq.Expressions.Expression{System.Func{RudeusBg.Worker,System.Boolean}},System.String)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: )
  - name: (
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Object.Xunit.AssertEx.IsInstanceOf``1
  commentId: M:Xunit.AssertEx.IsInstanceOf``1(System.Object)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsInstanceOf``1(System.Object)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsInstanceOf__1_System_Object_
  name: IsInstanceOf<TExpected>(object)
  nameWithType: AssertEx.IsInstanceOf<TExpected>(object)
  fullName: Xunit.AssertEx.IsInstanceOf<TExpected>(object)
  nameWithType.vb: AssertEx.IsInstanceOf(Of TExpected)(Object)
  fullName.vb: Xunit.AssertEx.IsInstanceOf(Of TExpected)(Object)
  name.vb: IsInstanceOf(Of TExpected)(Object)
  spec.csharp:
  - uid: Xunit.AssertEx.IsInstanceOf``1(System.Object)
    name: IsInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsInstanceOf__1_System_Object_
  - name: <
  - name: TExpected
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsInstanceOf``1(System.Object)
    name: IsInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsInstanceOf__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: TExpected
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Xunit.AssertEx.IsNotInstanceOf``1
  commentId: M:Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotInstanceOf__1_System_Object_
  name: IsNotInstanceOf<TWrong>(object)
  nameWithType: AssertEx.IsNotInstanceOf<TWrong>(object)
  fullName: Xunit.AssertEx.IsNotInstanceOf<TWrong>(object)
  nameWithType.vb: AssertEx.IsNotInstanceOf(Of TWrong)(Object)
  fullName.vb: Xunit.AssertEx.IsNotInstanceOf(Of TWrong)(Object)
  name.vb: IsNotInstanceOf(Of TWrong)(Object)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
    name: IsNotInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotInstanceOf__1_System_Object_
  - name: <
  - name: TWrong
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
    name: IsNotInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotInstanceOf__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: TWrong
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.String)
  commentId: M:Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotStructuralEqual_System_Object_System_Object_System_String_
  name: IsNotStructuralEqual(object, object, string)
  nameWithType: AssertEx.IsNotStructuralEqual(object, object, string)
  fullName: Xunit.AssertEx.IsNotStructuralEqual(object, object, string)
  nameWithType.vb: AssertEx.IsNotStructuralEqual(Object, Object, String)
  fullName.vb: Xunit.AssertEx.IsNotStructuralEqual(Object, Object, String)
  name.vb: IsNotStructuralEqual(Object, Object, String)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
    name: IsNotStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
    name: IsNotStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Object.Xunit.AssertEx.IsStructuralEqual(System.Object,System.String)
  commentId: M:Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
  parent: Xunit.AssertEx
  definition: Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsStructuralEqual_System_Object_System_Object_System_String_
  name: IsStructuralEqual(object, object, string)
  nameWithType: AssertEx.IsStructuralEqual(object, object, string)
  fullName: Xunit.AssertEx.IsStructuralEqual(object, object, string)
  nameWithType.vb: AssertEx.IsStructuralEqual(Object, Object, String)
  fullName.vb: Xunit.AssertEx.IsStructuralEqual(Object, Object, String)
  name.vb: IsStructuralEqual(Object, Object, String)
  spec.csharp:
  - uid: Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
    name: IsStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
    name: IsStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Hosting
  commentId: N:Microsoft.Extensions.Hosting
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Hosting
  nameWithType: Microsoft.Extensions.Hosting
  fullName: Microsoft.Extensions.Hosting
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Hosting
    name: Hosting
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Hosting
    name: Hosting
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting
- uid: Xunit.AssertEx.AsDynamic``1(``0)
  commentId: M:Xunit.AssertEx.AsDynamic``1(``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_AsDynamic__1___0_
  name: AsDynamic<T>(T)
  nameWithType: AssertEx.AsDynamic<T>(T)
  fullName: Xunit.AssertEx.AsDynamic<T>(T)
  nameWithType.vb: AssertEx.AsDynamic(Of T)(T)
  fullName.vb: Xunit.AssertEx.AsDynamic(Of T)(T)
  name.vb: AsDynamic(Of T)(T)
  spec.csharp:
  - uid: Xunit.AssertEx.AsDynamic``1(``0)
    name: AsDynamic
    href: Xunit.AssertEx.html#Xunit_AssertEx_AsDynamic__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.AsDynamic``1(``0)
    name: AsDynamic
    href: Xunit.AssertEx.html#Xunit_AssertEx_AsDynamic__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Xunit.AssertEx
  commentId: T:Xunit.AssertEx
  parent: Xunit
  href: Xunit.AssertEx.html
  name: AssertEx
  nameWithType: AssertEx
  fullName: Xunit.AssertEx
- uid: Xunit.AssertEx.IsNotNull``1(``0)
  commentId: M:Xunit.AssertEx.IsNotNull``1(``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotNull__1___0_
  name: IsNotNull<T>(T)
  nameWithType: AssertEx.IsNotNull<T>(T)
  fullName: Xunit.AssertEx.IsNotNull<T>(T)
  nameWithType.vb: AssertEx.IsNotNull(Of T)(T)
  fullName.vb: Xunit.AssertEx.IsNotNull(Of T)(T)
  name.vb: IsNotNull(Of T)(T)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotNull``1(``0)
    name: IsNotNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotNull__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotNull``1(``0)
    name: IsNotNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotNull__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Xunit.AssertEx.IsNotSameReferenceAs``1(``0,``0)
  commentId: M:Xunit.AssertEx.IsNotSameReferenceAs``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotSameReferenceAs__1___0___0_
  name: IsNotSameReferenceAs<T>(T, T)
  nameWithType: AssertEx.IsNotSameReferenceAs<T>(T, T)
  fullName: Xunit.AssertEx.IsNotSameReferenceAs<T>(T, T)
  nameWithType.vb: AssertEx.IsNotSameReferenceAs(Of T)(T, T)
  fullName.vb: Xunit.AssertEx.IsNotSameReferenceAs(Of T)(T, T)
  name.vb: IsNotSameReferenceAs(Of T)(T, T)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotSameReferenceAs``1(``0,``0)
    name: IsNotSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotSameReferenceAs__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotSameReferenceAs``1(``0,``0)
    name: IsNotSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotSameReferenceAs__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Xunit.AssertEx.IsNot``1(``0,``0)
  commentId: M:Xunit.AssertEx.IsNot``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_
  name: IsNot<T>(T, T)
  nameWithType: AssertEx.IsNot<T>(T, T)
  fullName: Xunit.AssertEx.IsNot<T>(T, T)
  nameWithType.vb: AssertEx.IsNot(Of T)(T, T)
  fullName.vb: Xunit.AssertEx.IsNot(Of T)(T, T)
  name.vb: IsNot(Of T)(T, T)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNot``1(``0,``0)
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNot``1(``0,``0)
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Xunit.AssertEx.IsNot``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:Xunit.AssertEx.IsNot``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  name: IsNot<T>(T, T, IEqualityComparer<T>)
  nameWithType: AssertEx.IsNot<T>(T, T, IEqualityComparer<T>)
  fullName: Xunit.AssertEx.IsNot<T>(T, T, System.Collections.Generic.IEqualityComparer<T>)
  nameWithType.vb: AssertEx.IsNot(Of T)(T, T, IEqualityComparer(Of T))
  fullName.vb: Xunit.AssertEx.IsNot(Of T)(T, T, System.Collections.Generic.IEqualityComparer(Of T))
  name.vb: IsNot(Of T)(T, T, IEqualityComparer(Of T))
  spec.csharp:
  - uid: Xunit.AssertEx.IsNot``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNot``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
    name: IsNot
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNot__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Xunit.AssertEx.IsNull``1(``0)
  commentId: M:Xunit.AssertEx.IsNull``1(``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNull__1___0_
  name: IsNull<T>(T)
  nameWithType: AssertEx.IsNull<T>(T)
  fullName: Xunit.AssertEx.IsNull<T>(T)
  nameWithType.vb: AssertEx.IsNull(Of T)(T)
  fullName.vb: Xunit.AssertEx.IsNull(Of T)(T)
  name.vb: IsNull(Of T)(T)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNull``1(``0)
    name: IsNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNull__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNull``1(``0)
    name: IsNull
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNull__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Xunit.AssertEx.IsSameReferenceAs``1(``0,``0)
  commentId: M:Xunit.AssertEx.IsSameReferenceAs``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsSameReferenceAs__1___0___0_
  name: IsSameReferenceAs<T>(T, T)
  nameWithType: AssertEx.IsSameReferenceAs<T>(T, T)
  fullName: Xunit.AssertEx.IsSameReferenceAs<T>(T, T)
  nameWithType.vb: AssertEx.IsSameReferenceAs(Of T)(T, T)
  fullName.vb: Xunit.AssertEx.IsSameReferenceAs(Of T)(T, T)
  name.vb: IsSameReferenceAs(Of T)(T, T)
  spec.csharp:
  - uid: Xunit.AssertEx.IsSameReferenceAs``1(``0,``0)
    name: IsSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsSameReferenceAs__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsSameReferenceAs``1(``0,``0)
    name: IsSameReferenceAs
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsSameReferenceAs__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Xunit.AssertEx.Is``1(``0,``0)
  commentId: M:Xunit.AssertEx.Is``1(``0,``0)
  href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_
  name: Is<T>(T, T)
  nameWithType: AssertEx.Is<T>(T, T)
  fullName: Xunit.AssertEx.Is<T>(T, T)
  nameWithType.vb: AssertEx.Is(Of T)(T, T)
  fullName.vb: Xunit.AssertEx.Is(Of T)(T, T)
  name.vb: Is(Of T)(T, T)
  spec.csharp:
  - uid: Xunit.AssertEx.Is``1(``0,``0)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.Is``1(``0,``0)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Xunit.AssertEx.Is``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:Xunit.AssertEx.Is``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  name: Is<T>(T, T, IEqualityComparer<T>)
  nameWithType: AssertEx.Is<T>(T, T, IEqualityComparer<T>)
  fullName: Xunit.AssertEx.Is<T>(T, T, System.Collections.Generic.IEqualityComparer<T>)
  nameWithType.vb: AssertEx.Is(Of T)(T, T, IEqualityComparer(Of T))
  fullName.vb: Xunit.AssertEx.Is(Of T)(T, T, System.Collections.Generic.IEqualityComparer(Of T))
  name.vb: Is(Of T)(T, T, IEqualityComparer(Of T))
  spec.csharp:
  - uid: Xunit.AssertEx.Is``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.Is``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0___0_System_Collections_Generic_IEqualityComparer___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Xunit.AssertEx.Is``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  commentId: M:Xunit.AssertEx.Is``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  isExternal: true
  href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  name: Is<T>(T, Expression<Func<T, bool>>, string)
  nameWithType: AssertEx.Is<T>(T, Expression<Func<T, bool>>, string)
  fullName: Xunit.AssertEx.Is<T>(T, System.Linq.Expressions.Expression<System.Func<T, bool>>, string)
  nameWithType.vb: AssertEx.Is(Of T)(T, Expression(Of Func(Of T, Boolean)), String)
  fullName.vb: Xunit.AssertEx.Is(Of T)(T, System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), String)
  name.vb: Is(Of T)(T, Expression(Of Func(Of T, Boolean)), String)
  spec.csharp:
  - uid: Xunit.AssertEx.Is``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.Is``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: Is
    href: Xunit.AssertEx.html#Xunit_AssertEx_Is__1___0_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Xunit.AssertEx.IsInstanceOf``1(System.Object)
  commentId: M:Xunit.AssertEx.IsInstanceOf``1(System.Object)
  isExternal: true
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsInstanceOf__1_System_Object_
  name: IsInstanceOf<TExpected>(object)
  nameWithType: AssertEx.IsInstanceOf<TExpected>(object)
  fullName: Xunit.AssertEx.IsInstanceOf<TExpected>(object)
  nameWithType.vb: AssertEx.IsInstanceOf(Of TExpected)(Object)
  fullName.vb: Xunit.AssertEx.IsInstanceOf(Of TExpected)(Object)
  name.vb: IsInstanceOf(Of TExpected)(Object)
  spec.csharp:
  - uid: Xunit.AssertEx.IsInstanceOf``1(System.Object)
    name: IsInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsInstanceOf__1_System_Object_
  - name: <
  - name: TExpected
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsInstanceOf``1(System.Object)
    name: IsInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsInstanceOf__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: TExpected
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
  commentId: M:Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
  isExternal: true
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotInstanceOf__1_System_Object_
  name: IsNotInstanceOf<TWrong>(object)
  nameWithType: AssertEx.IsNotInstanceOf<TWrong>(object)
  fullName: Xunit.AssertEx.IsNotInstanceOf<TWrong>(object)
  nameWithType.vb: AssertEx.IsNotInstanceOf(Of TWrong)(Object)
  fullName.vb: Xunit.AssertEx.IsNotInstanceOf(Of TWrong)(Object)
  name.vb: IsNotInstanceOf(Of TWrong)(Object)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
    name: IsNotInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotInstanceOf__1_System_Object_
  - name: <
  - name: TWrong
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotInstanceOf``1(System.Object)
    name: IsNotInstanceOf
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotInstanceOf__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: TWrong
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
  commentId: M:Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
  isExternal: true
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotStructuralEqual_System_Object_System_Object_System_String_
  name: IsNotStructuralEqual(object, object, string)
  nameWithType: AssertEx.IsNotStructuralEqual(object, object, string)
  fullName: Xunit.AssertEx.IsNotStructuralEqual(object, object, string)
  nameWithType.vb: AssertEx.IsNotStructuralEqual(Object, Object, String)
  fullName.vb: Xunit.AssertEx.IsNotStructuralEqual(Object, Object, String)
  name.vb: IsNotStructuralEqual(Object, Object, String)
  spec.csharp:
  - uid: Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
    name: IsNotStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsNotStructuralEqual(System.Object,System.Object,System.String)
    name: IsNotStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsNotStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
  commentId: M:Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
  isExternal: true
  href: Xunit.AssertEx.html#Xunit_AssertEx_IsStructuralEqual_System_Object_System_Object_System_String_
  name: IsStructuralEqual(object, object, string)
  nameWithType: AssertEx.IsStructuralEqual(object, object, string)
  fullName: Xunit.AssertEx.IsStructuralEqual(object, object, string)
  nameWithType.vb: AssertEx.IsStructuralEqual(Object, Object, String)
  fullName.vb: Xunit.AssertEx.IsStructuralEqual(Object, Object, String)
  name.vb: IsStructuralEqual(Object, Object, String)
  spec.csharp:
  - uid: Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
    name: IsStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Xunit.AssertEx.IsStructuralEqual(System.Object,System.Object,System.String)
    name: IsStructuralEqual
    href: Xunit.AssertEx.html#Xunit_AssertEx_IsStructuralEqual_System_Object_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Xunit
  commentId: N:Xunit
  href: Xunit.html
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: RudeusBg.Worker.AccessTokenValidator*
  commentId: Overload:RudeusBg.Worker.AccessTokenValidator
  href: RudeusBg.Worker.html#RudeusBg_Worker_AccessTokenValidator
  name: AccessTokenValidator
  nameWithType: Worker.AccessTokenValidator
  fullName: RudeusBg.Worker.AccessTokenValidator
- uid: RudeusBg.IWorker.AccessTokenValidator
  commentId: P:RudeusBg.IWorker.AccessTokenValidator
  parent: RudeusBg.IWorker
  href: RudeusBg.IWorker.html#RudeusBg_IWorker_AccessTokenValidator
  name: AccessTokenValidator
  nameWithType: IWorker.AccessTokenValidator
  fullName: RudeusBg.IWorker.AccessTokenValidator
- uid: Rudeus.Procedure.IProcedure
  commentId: T:Rudeus.Procedure.IProcedure
  parent: Rudeus.Procedure
  href: Rudeus.Procedure.IProcedure.html
  name: IProcedure
  nameWithType: IProcedure
  fullName: Rudeus.Procedure.IProcedure
- uid: Rudeus.Procedure
  commentId: N:Rudeus.Procedure
  href: Rudeus.html
  name: Rudeus.Procedure
  nameWithType: Rudeus.Procedure
  fullName: Rudeus.Procedure
  spec.csharp:
  - uid: Rudeus
    name: Rudeus
    href: Rudeus.html
  - name: .
  - uid: Rudeus.Procedure
    name: Procedure
    href: Rudeus.Procedure.html
  spec.vb:
  - uid: Rudeus
    name: Rudeus
    href: Rudeus.html
  - name: .
  - uid: Rudeus.Procedure
    name: Procedure
    href: Rudeus.Procedure.html
- uid: RudeusBg.Worker.ScheduledRelularExecuter*
  commentId: Overload:RudeusBg.Worker.ScheduledRelularExecuter
  href: RudeusBg.Worker.html#RudeusBg_Worker_ScheduledRelularExecuter
  name: ScheduledRelularExecuter
  nameWithType: Worker.ScheduledRelularExecuter
  fullName: RudeusBg.Worker.ScheduledRelularExecuter
- uid: RudeusBg.IWorker.ScheduledRelularExecuter
  commentId: P:RudeusBg.IWorker.ScheduledRelularExecuter
  parent: RudeusBg.IWorker
  href: RudeusBg.IWorker.html#RudeusBg_IWorker_ScheduledRelularExecuter
  name: ScheduledRelularExecuter
  nameWithType: IWorker.ScheduledRelularExecuter
  fullName: RudeusBg.IWorker.ScheduledRelularExecuter
- uid: RudeusBg.Worker.UserLoginExecuter*
  commentId: Overload:RudeusBg.Worker.UserLoginExecuter
  href: RudeusBg.Worker.html#RudeusBg_Worker_UserLoginExecuter
  name: UserLoginExecuter
  nameWithType: Worker.UserLoginExecuter
  fullName: RudeusBg.Worker.UserLoginExecuter
- uid: RudeusBg.IWorker.UserLoginExecuter
  commentId: P:RudeusBg.IWorker.UserLoginExecuter
  parent: RudeusBg.IWorker
  href: RudeusBg.IWorker.html#RudeusBg_IWorker_UserLoginExecuter
  name: UserLoginExecuter
  nameWithType: IWorker.UserLoginExecuter
  fullName: RudeusBg.IWorker.UserLoginExecuter
- uid: RudeusBg.Worker.settings*
  commentId: Overload:RudeusBg.Worker.settings
  href: RudeusBg.Worker.html#RudeusBg_Worker_settings
  name: settings
  nameWithType: Worker.settings
  fullName: RudeusBg.Worker.settings
- uid: Rudeus.Model.Settings
  commentId: T:Rudeus.Model.Settings
  parent: Rudeus.Model
  href: Rudeus.Model.Settings.html
  name: Settings
  nameWithType: Settings
  fullName: Rudeus.Model.Settings
- uid: Rudeus.Model
  commentId: N:Rudeus.Model
  href: Rudeus.html
  name: Rudeus.Model
  nameWithType: Rudeus.Model
  fullName: Rudeus.Model
  spec.csharp:
  - uid: Rudeus
    name: Rudeus
    href: Rudeus.html
  - name: .
  - uid: Rudeus.Model
    name: Model
    href: Rudeus.Model.html
  spec.vb:
  - uid: Rudeus
    name: Rudeus
    href: Rudeus.html
  - name: .
  - uid: Rudeus.Model
    name: Model
    href: Rudeus.Model.html
- uid: RudeusBg.Worker.#ctor*
  commentId: Overload:RudeusBg.Worker.#ctor
  href: RudeusBg.Worker.html#RudeusBg_Worker__ctor_Microsoft_Extensions_Logging_ILogger_RudeusBg_Worker__Rudeus_Procedure_IProcedure_Rudeus_Procedure_IProcedure_Rudeus_Procedure_IProcedure_
  name: Worker
  nameWithType: Worker.Worker
  fullName: RudeusBg.Worker.Worker
  nameWithType.vb: Worker.New
  fullName.vb: RudeusBg.Worker.New
  name.vb: New
- uid: Microsoft.Extensions.Logging.ILogger{RudeusBg.Worker}
  commentId: T:Microsoft.Extensions.Logging.ILogger{RudeusBg.Worker}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<Worker>
  nameWithType: ILogger<Worker>
  fullName: Microsoft.Extensions.Logging.ILogger<RudeusBg.Worker>
  nameWithType.vb: ILogger(Of Worker)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of RudeusBg.Worker)
  name.vb: ILogger(Of Worker)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - uid: RudeusBg.Worker
    name: Worker
    href: RudeusBg.Worker.html
  - name: )
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - name: TCategoryName
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - name: TCategoryName
  - name: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostedservice.stopasync
  name: StopAsync(CancellationToken)
  nameWithType: IHostedService.StopAsync(CancellationToken)
  fullName: Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
    name: StopAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostedservice.stopasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
    name: StopAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostedservice.stopasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Extensions.Hosting.BackgroundService.ExecuteAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Extensions.Hosting.BackgroundService.ExecuteAsync(System.Threading.CancellationToken)
  parent: Microsoft.Extensions.Hosting.BackgroundService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.executeasync
  name: ExecuteAsync(CancellationToken)
  nameWithType: BackgroundService.ExecuteAsync(CancellationToken)
  fullName: Microsoft.Extensions.Hosting.BackgroundService.ExecuteAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.ExecuteAsync(System.Threading.CancellationToken)
    name: ExecuteAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.executeasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.ExecuteAsync(System.Threading.CancellationToken)
    name: ExecuteAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.executeasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: RudeusBg.Worker.ExecuteAsync*
  commentId: Overload:RudeusBg.Worker.ExecuteAsync
  href: RudeusBg.Worker.html#RudeusBg_Worker_ExecuteAsync_System_Threading_CancellationToken_
  name: ExecuteAsync
  nameWithType: Worker.ExecuteAsync
  fullName: RudeusBg.Worker.ExecuteAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
